/* The following code was generated by JFlex 1.6.1 */

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package analizador.lexico;

import java.util.ArrayList;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;

class Yytoken {
    
    private int id; //Identificador Ãºnico para cada TOKEN
    private String name; //Nombre del TOKEN
    private Types_Tokens type;  //Tipo del TOKEN (Identificador, Operador, Palabra Reservada, Literal)
    private ArrayList<Line> lines = new ArrayList<>();  //Arreglos de lineas y ocurrencias
    
    public Yytoken(int id, String name, Types_Tokens type) {
        this.id = id;
        this.name = name;
        this.type = type;
    }

    @Override
    public String toString() {
        String token = name + "\t" + "\t" + type + "\t" + "\t" + lines;
        return token;
    }

    /**
     * @return the id
     */
    public int getId() {
        return id;
    }

    /**
     * @param id the id to set
     */
    public void setId(int id) {
        this.id = id;
    }
    
    /**
     * @return the name
     */
    public String getName() {
        return name;
    }

    /**
     * @param name the name to set
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * @return the type
     */
    public Types_Tokens getType() {
        return type;
    }

    /**
     * @param type the type to set
     */
    public void setType(Types_Tokens type) {
        this.type = type;
    }

    /**
     * @return the lines
     */
    public ArrayList<Line> getLines() {
        return lines;
    }

    /**
     * @param lines the lines to set
     */
    public void setLines(ArrayList<Line> lines) {
        this.lines = lines;        
    }
    
}

/********** Seccion de opciones y declaraciones de JFlex **********/

public class LexerAnalyzer {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\0\1\1\1\10\1\12\1\12\1\11\22\0\1\1\1\0\1\50"+
    "\1\51\1\0\1\61\2\0\1\2\1\4\1\3\1\53\1\52\1\45"+
    "\1\43\1\7\1\60\11\42\1\57\1\52\1\56\1\55\1\54\2\0"+
    "\1\13\1\20\1\27\1\15\1\21\1\34\1\22\1\31\1\23\1\46"+
    "\1\40\1\25\1\36\1\14\1\24\1\37\1\46\1\16\1\30\1\26"+
    "\1\35\1\32\1\33\1\41\1\17\1\46\1\52\1\0\1\52\3\0"+
    "\4\46\1\47\25\46\1\5\1\44\1\6\7\0\1\12\u1fa2\0\1\12"+
    "\1\12\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\uffff\0\udfe6\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\1\1\1\2\3\3\1\1\1\3\1\2\25\4"+
    "\1\5\2\3\2\1\3\3\1\5\2\1\1\2\1\1"+
    "\1\2\6\4\1\6\6\4\2\6\24\4\1\1\1\5"+
    "\4\0\2\7\1\1\3\0\1\1\1\0\1\4\1\6"+
    "\25\4\1\6\4\4\1\1\2\5\1\0\1\7\1\0"+
    "\1\7\1\1\1\0\1\2\1\0\3\4\1\6\20\4"+
    "\1\1\2\5\1\0\1\1\1\4\1\6\14\4\1\1"+
    "\1\5\1\1\1\4\1\6\7\4\1\1\1\5\1\1"+
    "\1\4\1\6\3\4\1\1\1\5\1\1\1\4\1\6"+
    "\1\4\1\1\1\5\1\1\1\4\1\6\1\1\1\5"+
    "\1\1\1\4\1\1\1\5\1\1\1\4\1\1\1\5"+
    "\1\1\1\4\1\1\1\5\1\1\1\4\1\1\1\5"+
    "\1\1\1\4\1\1\1\5\1\1\1\4\1\1\1\5"+
    "\1\1\1\4\1\1\1\5\1\1\1\4\1\1\1\5"+
    "\1\1\1\4\1\1\1\5\1\1\1\4\1\1\1\5"+
    "\1\1\1\4\1\1\1\5\1\1\1\4\1\1\1\5"+
    "\1\1\1\4\1\1\1\5\1\1\1\4\1\1\1\5"+
    "\1\1\1\4\1\1\1\5\1\1\1\4\1\1\1\5"+
    "\1\1\1\4\1\1\1\5\1\1\1\4\1\1\1\5"+
    "\1\1\1\4\1\1\1\5\1\1\1\4\1\1\1\5"+
    "\1\1\1\4\1\1\1\5\1\1\1\4\1\1\1\5"+
    "\1\1\1\4\1\1\1\5\1\1\1\4\1\1\1\5"+
    "\1\1\1\4\1\1\1\5\1\1\1\4\1\1\1\5"+
    "\1\1\1\4\1\1\1\5\1\1\1\4\1\1\1\5"+
    "\1\1\1\4\1\1\1\5\1\1\1\4\1\1\1\5"+
    "\1\1\1\4\1\1\1\5\1\1\1\4\1\1\1\5"+
    "\1\1\1\4\1\1\1\5\1\1\1\4\1\1\1\5"+
    "\1\1\1\4\1\1\1\5\1\1\1\4\1\1\1\5"+
    "\1\1\1\4\1\1\1\5\1\1\1\4\1\1\1\5"+
    "\1\1\1\4\1\1\1\5\1\1\1\4\1\1\1\5"+
    "\1\1\1\4\1\1\1\5\1\1\1\4\1\1\1\5"+
    "\1\1\1\4\1\1\1\5\1\1\1\4\1\1\1\5"+
    "\1\1\1\4\1\1\1\5\1\1\1\4\1\1\1\5"+
    "\1\1\1\4\1\1\1\5\1\1\1\4\1\1\1\5"+
    "\1\1\1\4\1\1\1\5\1\1\1\4\1\1\1\5"+
    "\1\1\1\4\1\1\1\5\1\1\1\4\1\1\1\5"+
    "\1\1\1\4\1\1\1\5\1\1\1\4\1\1\1\5"+
    "\1\1\1\4\1\1\1\5\1\1\1\4\1\1\1\5"+
    "\1\1\1\4\1\1\1\5\1\1\1\4\1\1\1\5"+
    "\1\1\1\4\1\1\1\5\1\1\1\4\1\1\1\5"+
    "\1\1\1\4\1\1\1\5\1\1\1\4\1\1\1\5"+
    "\1\1\1\4\1\1\1\5\1\1\1\4\1\1\1\5"+
    "\1\1\1\4\1\1\1\5\1\1\1\4\1\1\1\5"+
    "\1\1\1\4\1\1\1\5\1\1\1\4\1\1\1\5"+
    "\1\1\1\4\1\1\1\5\1\1\1\4\1\1\1\5"+
    "\1\1\1\4\1\1\1\5\1\1\1\4\1\1\1\5"+
    "\1\1\1\4\1\1\1\5\1\1\1\4\1\1\1\5"+
    "\1\1\1\4\1\1\1\5\1\1\1\4\1\1\1\5"+
    "\1\1\1\4\1\1\1\5\1\1\1\4\1\1\1\5"+
    "\1\1\1\4\1\1\1\5\1\1\1\4\1\1\1\5"+
    "\1\1\1\4\1\1\1\5\1\1\1\4\1\1\1\5"+
    "\1\1\1\4\1\1\1\5\1\1\1\4\1\1\1\5"+
    "\1\1\1\4\1\1\1\5\1\1\1\4\1\1\1\5"+
    "\1\1\1\4\1\1\1\5\1\1\1\4\1\1\1\5"+
    "\1\1\1\4\1\1\1\5\1\1\1\4\1\1\1\5"+
    "\1\1\1\4\1\1\1\5\1\1\1\4\1\1\1\5"+
    "\1\1\1\4\1\1\1\5\1\1\1\4\1\1\1\5"+
    "\1\1\1\4\1\1\1\5\1\1\1\4\1\1\1\5"+
    "\1\1\1\4\1\1\1\5\1\1\1\4\1\1\1\5"+
    "\1\1\1\4\1\1\1\5\1\1\1\4\1\1\1\5"+
    "\1\1\1\4\1\1\1\5\1\1\1\4\1\1\1\5"+
    "\1\1\1\4\1\1\1\5\1\1\1\4\1\1\1\5"+
    "\1\1\1\4\1\1\1\5\1\1\1\4\1\1\1\5"+
    "\1\1\1\4\1\1\1\5\1\1\1\4\1\1\1\5"+
    "\1\1\1\4\1\1\1\5\1\1\1\4\1\1\1\5"+
    "\1\1\1\4\1\1\1\5\1\1\1\4\1\1\1\5"+
    "\1\1\1\4\1\1\1\5\1\1\1\4\1\1\1\5"+
    "\1\1\1\4\1\1\1\5\1\1\1\4\1\1\1\5"+
    "\1\1\1\4\1\1\1\5\1\1\1\4\1\5\2\1"+
    "\1\0\367\1";

  private static int [] zzUnpackAction() {
    int [] result = new int[925];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\62\0\62\0\144\0\226\0\62\0\310\0\372"+
    "\0\u012c\0\u015e\0\u0190\0\u01c2\0\u01f4\0\u0226\0\u0258\0\u028a"+
    "\0\u02bc\0\u02ee\0\u0320\0\u0352\0\u0384\0\u03b6\0\u03e8\0\u041a"+
    "\0\u044c\0\u047e\0\u04b0\0\u04e2\0\u0514\0\u0546\0\u0578\0\u05aa"+
    "\0\u05dc\0\u060e\0\u0640\0\u0672\0\u06a4\0\u06d6\0\u0708\0\u073a"+
    "\0\u076c\0\u079e\0\u07d0\0\u0802\0\u0834\0\u0866\0\u0898\0\u08ca"+
    "\0\u08fc\0\u092e\0\u0960\0\u0992\0\u09c4\0\u09f6\0\u0a28\0\u0a5a"+
    "\0\u0a8c\0\u0abe\0\u0834\0\u0af0\0\u0b22\0\u0b54\0\u0b86\0\u0bb8"+
    "\0\u0bea\0\u0c1c\0\u0c4e\0\u0c80\0\u0cb2\0\u0ce4\0\u0d16\0\u0d48"+
    "\0\u0d7a\0\u0dac\0\u0dde\0\u0e10\0\u0e42\0\u0e74\0\u0ea6\0\u0ed8"+
    "\0\u0f0a\0\u0f3c\0\u0f6e\0\u060e\0\u0fa0\0\u0fd2\0\u1004\0\u1036"+
    "\0\u1068\0\u109a\0\u10cc\0\u10fe\0\u079e\0\u1130\0\u1130\0\u1162"+
    "\0\u1194\0\u11c6\0\u11f8\0\u122a\0\u125c\0\u128e\0\u12c0\0\u12f2"+
    "\0\u1324\0\u1356\0\u1388\0\u13ba\0\u13ec\0\u141e\0\u1450\0\u1482"+
    "\0\u14b4\0\u14e6\0\u1518\0\u154a\0\u157c\0\u15ae\0\u15e0\0\u1612"+
    "\0\u1644\0\u1676\0\u16a8\0\u16da\0\u170c\0\62\0\u0fd2\0\u173e"+
    "\0\u1770\0\u17a2\0\u10cc\0\u17d4\0\u1806\0\u1838\0\u186a\0\u1806"+
    "\0\u189c\0\u18ce\0\u1900\0\u1932\0\u1964\0\u1996\0\u19c8\0\u19fa"+
    "\0\u1a2c\0\u1a5e\0\u1a90\0\u1ac2\0\u1af4\0\u1b26\0\u1b58\0\u1b8a"+
    "\0\u1bbc\0\u1bee\0\u1c20\0\u1c20\0\u1c52\0\u1c84\0\u1c84\0\u1cb6"+
    "\0\u1ce8\0\u1d1a\0\u1d4c\0\u1d7e\0\u1db0\0\u1de2\0\u1e14\0\u1e46"+
    "\0\u1e78\0\u1eaa\0\u1edc\0\u1f0e\0\u1f40\0\u1f72\0\u1fa4\0\u1fa4"+
    "\0\u1fd6\0\u2008\0\u203a\0\u206c\0\u209e\0\u20d0\0\u2102\0\u2134"+
    "\0\u2166\0\u2198\0\u21ca\0\u21ca\0\u21fc\0\u222e\0\u2260\0\u2292"+
    "\0\u22c4\0\u22f6\0\u2328\0\u2328\0\u235a\0\u238c\0\u23be\0\u23f0"+
    "\0\u2422\0\u2422\0\u2454\0\u2486\0\u24b8\0\u24ea\0\u251c\0\u254e"+
    "\0\u2580\0\u25b2\0\u25e4\0\u2616\0\u2648\0\u267a\0\u26ac\0\u26de"+
    "\0\u2710\0\u2742\0\u2774\0\u27a6\0\u27d8\0\u280a\0\u283c\0\u286e"+
    "\0\u28a0\0\u28d2\0\u2904\0\u2936\0\u2968\0\u299a\0\u29cc\0\u29fe"+
    "\0\u2a30\0\u2a62\0\u2a94\0\u2ac6\0\u2af8\0\u2b2a\0\u2b5c\0\u2b8e"+
    "\0\u2bc0\0\u2bf2\0\u2c24\0\u2c56\0\u2c88\0\u2cba\0\u2cec\0\u2d1e"+
    "\0\u2d50\0\u2d82\0\u2db4\0\u2de6\0\u2e18\0\u2e4a\0\u2e7c\0\u2eae"+
    "\0\u2ee0\0\u2f12\0\u2f44\0\u2f76\0\u2fa8\0\u2fda\0\u300c\0\u303e"+
    "\0\u3070\0\u30a2\0\u30d4\0\u3106\0\u3138\0\u316a\0\u319c\0\u31ce"+
    "\0\u3200\0\u3232\0\u3264\0\u3296\0\u32c8\0\u32fa\0\u332c\0\u335e"+
    "\0\u3390\0\u33c2\0\u33f4\0\u3426\0\u3458\0\u348a\0\u34bc\0\u34ee"+
    "\0\u3520\0\u3552\0\u3584\0\u35b6\0\u35e8\0\u361a\0\u364c\0\u367e"+
    "\0\u36b0\0\u36e2\0\u3714\0\u3746\0\u3778\0\u37aa\0\u37dc\0\u380e"+
    "\0\u3840\0\u3872\0\u38a4\0\u38d6\0\u3908\0\u393a\0\u396c\0\u399e"+
    "\0\u39d0\0\u3a02\0\u3a34\0\u3a66\0\u3a98\0\u3aca\0\u3afc\0\u3b2e"+
    "\0\u3b60\0\u3b92\0\u3bc4\0\u3bf6\0\u3c28\0\u3c5a\0\u3c8c\0\u3cbe"+
    "\0\u3cf0\0\u3d22\0\u3d54\0\u3d86\0\u3db8\0\u3dea\0\u3e1c\0\u3e4e"+
    "\0\u3e80\0\u3eb2\0\u3ee4\0\u3f16\0\u3f48\0\u3f7a\0\u3fac\0\u3fde"+
    "\0\u4010\0\u4042\0\u4074\0\u40a6\0\u40d8\0\u410a\0\u413c\0\u416e"+
    "\0\u41a0\0\u41d2\0\u4204\0\u4236\0\u4268\0\u429a\0\u42cc\0\u42fe"+
    "\0\u4330\0\u4362\0\u4394\0\u43c6\0\u43f8\0\u442a\0\u445c\0\u448e"+
    "\0\u44c0\0\u44f2\0\u4524\0\u4556\0\u4588\0\u45ba\0\u45ec\0\u461e"+
    "\0\u4650\0\u4682\0\u46b4\0\u46e6\0\u4718\0\u474a\0\u477c\0\u47ae"+
    "\0\u47e0\0\u4812\0\u4844\0\u4876\0\u48a8\0\u48da\0\u490c\0\u493e"+
    "\0\u4970\0\u49a2\0\u49d4\0\u4a06\0\u4a38\0\u4a6a\0\u4a9c\0\u4ace"+
    "\0\u4b00\0\u4b32\0\u4b64\0\u4b96\0\u4bc8\0\u4bfa\0\u4c2c\0\u4c5e"+
    "\0\u4c90\0\u4cc2\0\u4cf4\0\u4d26\0\u4d58\0\u4d8a\0\u4dbc\0\u4dee"+
    "\0\u4e20\0\u4e52\0\u4e84\0\u4eb6\0\u4ee8\0\u4f1a\0\u4f4c\0\u4f7e"+
    "\0\u4fb0\0\u4fe2\0\u5014\0\u5046\0\u5078\0\u50aa\0\u50dc\0\u510e"+
    "\0\u5140\0\u5172\0\u51a4\0\u51d6\0\u5208\0\u523a\0\u526c\0\u529e"+
    "\0\u52d0\0\u5302\0\u5334\0\u5366\0\u5398\0\u53ca\0\u53fc\0\u542e"+
    "\0\u5460\0\u5492\0\u54c4\0\u54f6\0\u5528\0\u555a\0\u558c\0\u55be"+
    "\0\u55f0\0\u5622\0\u5654\0\u5686\0\u56b8\0\u56ea\0\u571c\0\u574e"+
    "\0\u5780\0\u57b2\0\u57e4\0\u5816\0\u5848\0\u587a\0\u58ac\0\u58de"+
    "\0\u5910\0\u5942\0\u5974\0\u59a6\0\u59d8\0\u5a0a\0\u5a3c\0\u5a6e"+
    "\0\u5aa0\0\u5ad2\0\u5b04\0\u5b36\0\u5b68\0\u5b9a\0\u5bcc\0\u5bfe"+
    "\0\u5c30\0\u5c62\0\u5c94\0\u5cc6\0\u5cf8\0\u5d2a\0\u5d5c\0\u5d8e"+
    "\0\u5dc0\0\u5df2\0\u5e24\0\u5e56\0\u5e88\0\u5eba\0\u5eec\0\u5f1e"+
    "\0\u5f50\0\u5f82\0\u5fb4\0\u5fe6\0\u6018\0\u604a\0\u607c\0\u60ae"+
    "\0\u60e0\0\u6112\0\u6144\0\u6176\0\u61a8\0\u61da\0\u620c\0\u623e"+
    "\0\u6270\0\u62a2\0\u62d4\0\u6306\0\u6338\0\u636a\0\u639c\0\u63ce"+
    "\0\u6400\0\u6432\0\u6464\0\u6496\0\u64c8\0\u64fa\0\u652c\0\u655e"+
    "\0\u6590\0\u65c2\0\u65f4\0\u6626\0\u6658\0\u668a\0\u66bc\0\u66ee"+
    "\0\u6720\0\u6752\0\u6784\0\u67b6\0\u67e8\0\u681a\0\u684c\0\u687e"+
    "\0\u68b0\0\u68e2\0\u6914\0\u6946\0\u6978\0\u69aa\0\u69dc\0\u6a0e"+
    "\0\u6a40\0\u6a72\0\u6aa4\0\u6ad6\0\u6b08\0\u6b3a\0\u6b6c\0\u6b9e"+
    "\0\u6bd0\0\u6c02\0\u6c34\0\u6c66\0\u6c98\0\u6cca\0\u6cfc\0\u6d2e"+
    "\0\u6d60\0\u6d92\0\u6dc4\0\u6df6\0\u6e28\0\u6e5a\0\u6e8c\0\u6ebe"+
    "\0\u6ef0\0\u6f22\0\u6f54\0\u6f86\0\u6fb8\0\u6fea\0\u701c\0\u704e"+
    "\0\u7080\0\u70b2\0\u70e4\0\u7116\0\u7148\0\u717a\0\u71ac\0\u71de"+
    "\0\u7210\0\u7242\0\u7274\0\u72a6\0\u72d8\0\u730a\0\u733c\0\u736e"+
    "\0\u73a0\0\u73d2\0\u7404\0\u7436\0\u7468\0\u749a\0\u74cc\0\u74fe"+
    "\0\u7530\0\u7562\0\u7594\0\u75c6\0\u75f8\0\u762a\0\u765c\0\u768e"+
    "\0\u76c0\0\u76f2\0\u7724\0\u7756\0\u7788\0\u77ba\0\u77ec\0\u781e"+
    "\0\u7850\0\u7882\0\u78b4\0\u78e6\0\u7918\0\u794a\0\u797c\0\u79ae"+
    "\0\u79e0\0\u7a12\0\u7a44\0\u7a76\0\u7aa8\0\u7ada\0\u7b0c\0\u7b3e"+
    "\0\u7b70\0\u7ba2\0\u7bd4\0\u7c06\0\u7c38\0\u7c6a\0\u7c9c\0\u7cce"+
    "\0\u7d00\0\u7d32\0\u7d64\0\u7d96\0\u7dc8\0\u7dfa\0\u7e2c\0\u7e5e"+
    "\0\u7e90\0\u7ec2\0\u7ef4\0\u7f26\0\u7f58\0\u7f8a\0\u7fbc\0\u7fee"+
    "\0\u8020\0\u8052\0\u8084\0\u80b6\0\u80e8\0\u80b6\0\u811a\0\u814c"+
    "\0\u817e\0\u81b0\0\u81e2\0\u8214\0\u8246\0\u8278\0\u82aa\0\u82dc"+
    "\0\u830e\0\u8340\0\u8372\0\u83a4\0\u83d6\0\u8408\0\u843a\0\u846c"+
    "\0\u849e\0\u84d0\0\u8502\0\u8534\0\u8566\0\u8598\0\u85ca\0\u85fc"+
    "\0\u862e\0\u8660\0\u8692\0\u86c4\0\u86f6\0\u8728\0\u875a\0\u878c"+
    "\0\u87be\0\u87f0\0\u8822\0\u8854\0\u8886\0\u88b8\0\u88ea\0\u891c"+
    "\0\u894e\0\u8980\0\u89b2\0\u89e4\0\u8a16\0\u8a48\0\u8a7a\0\u8aac"+
    "\0\u8ade\0\u8b10\0\u8b42\0\u8b74\0\u8ba6\0\u8bd8\0\u8c0a\0\u8c3c"+
    "\0\u8c6e\0\u8ca0\0\u8cd2\0\u8d04\0\u8d36\0\u8d68\0\u8d9a\0\u8dcc"+
    "\0\u8dfe\0\u8e30\0\u8e62\0\u8e94\0\u8ec6\0\u8ef8\0\u8f2a\0\u8f5c"+
    "\0\u8f8e\0\u8fc0\0\u8ff2\0\u9024\0\u9056\0\u9088\0\u90ba\0\u90ec"+
    "\0\u911e\0\u9150\0\u9182\0\u91b4\0\u91e6\0\u9218\0\u924a\0\u927c"+
    "\0\u92ae\0\u92e0\0\u9312\0\u9344\0\u9376\0\u93a8\0\u93da\0\u940c"+
    "\0\u943e\0\u9470\0\u94a2\0\u94d4\0\u9506\0\u9538\0\u956a\0\u959c"+
    "\0\u95ce\0\u9600\0\u9632\0\u9664\0\u9696\0\u96c8\0\u96fa\0\u972c"+
    "\0\u975e\0\u9790\0\u97c2\0\u97f4\0\u9826\0\u9858\0\u988a\0\u98bc"+
    "\0\u98ee\0\u9920\0\u9952\0\u9984\0\u99b6\0\u99e8\0\u9a1a\0\u9a4c"+
    "\0\u9a7e\0\u9ab0\0\u9ae2\0\u9b14\0\u9b46\0\u9b78\0\u9baa\0\u9bdc"+
    "\0\u9c0e\0\u9c40\0\u9c72\0\u9ca4\0\u9cd6\0\u9d08\0\u9d3a\0\u9d6c"+
    "\0\u9d9e\0\u9dd0\0\u9e02\0\u9e34\0\u9e66\0\u9e98\0\u9eca\0\u9efc"+
    "\0\u9f2e\0\u9f60\0\u9f92\0\u9fc4\0\u9ff6\0\ua028\0\ua05a\0\ua08c"+
    "\0\ua0be\0\ua0f0\0\ua122\0\ua154\0\ua186\0\ua1b8\0\ua1ea\0\ua21c"+
    "\0\ua24e\0\ua280\0\ua2b2\0\ua2e4\0\ua316\0\ua348\0\ua37a\0\ua3ac"+
    "\0\ua3de\0\ua410\0\ua442\0\ua474\0\ua4a6\0\ua4d8\0\ua50a\0\ua53c"+
    "\0\ua56e\0\ua5a0\0\ua5d2\0\ua604\0\ua636\0\ua668\0\ua69a\0\ua6cc"+
    "\0\ua6fe\0\ua730\0\ua762\0\ua794\0\ua7c6\0\ua7f8\0\ua82a\0\ua85c"+
    "\0\ua88e\0\ua8c0\0\ua8f2\0\ua924\0\ua956\0\ua988\0\ua9ba\0\ua9ec"+
    "\0\uaa1e\0\uaa50\0\uaa82\0\uaab4\0\uaae6\0\uab18\0\uab4a\0\uab7c"+
    "\0\uabae\0\uabe0\0\uac12\0\uac44\0\uac76\0\uaca8\0\uacda\0\uad0c"+
    "\0\uad3e\0\uad70\0\uada2\0\uadd4\0\uae06\0\uae38\0\uae6a\0\uae9c"+
    "\0\uaece\0\uaf00\0\uaf32\0\uaf64\0\uaf96\0\uafc8\0\uaffa\0\ub02c"+
    "\0\ub05e\0\ub090\0\ub0c2\0\ub0f4\0\ub126";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[925];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\1\3\1\4\1\5\1\6\1\7\1\2\1\10"+
    "\1\3\1\11\1\2\1\12\1\13\1\14\1\15\1\16"+
    "\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26"+
    "\1\27\1\16\1\30\1\31\1\32\1\33\1\34\1\35"+
    "\1\16\1\36\1\37\1\40\1\2\1\41\2\16\1\42"+
    "\1\43\1\6\1\44\1\45\1\6\1\46\1\5\1\47"+
    "\1\50\65\0\1\51\133\0\1\6\4\0\6\7\1\52"+
    "\1\7\3\53\47\7\7\0\1\54\45\0\1\6\14\0"+
    "\1\3\64\0\1\55\1\56\1\55\1\57\24\55\3\0"+
    "\2\55\10\0\1\55\14\0\10\55\1\60\1\61\16\55"+
    "\3\0\2\55\10\0\1\55\14\0\10\55\1\62\1\63"+
    "\16\55\3\0\2\55\10\0\1\55\14\0\6\55\1\64"+
    "\21\55\3\0\2\55\10\0\1\55\14\0\30\55\3\0"+
    "\2\55\10\0\1\55\14\0\4\55\1\65\1\55\1\66"+
    "\2\55\1\67\16\55\3\0\2\55\10\0\1\55\14\0"+
    "\1\55\1\56\10\55\1\70\15\55\3\0\2\55\10\0"+
    "\1\55\14\0\11\55\1\71\16\55\3\0\2\55\10\0"+
    "\1\55\14\0\1\55\1\72\17\55\1\73\6\55\3\0"+
    "\2\55\10\0\1\55\14\0\3\55\1\73\15\55\1\73"+
    "\6\55\3\0\2\55\10\0\1\55\14\0\1\74\10\55"+
    "\1\75\16\55\3\0\2\55\10\0\1\55\14\0\3\55"+
    "\1\76\1\77\4\55\1\73\4\55\1\100\11\55\3\0"+
    "\2\55\10\0\1\55\14\0\1\70\10\55\1\101\4\55"+
    "\1\102\11\55\3\0\2\55\10\0\1\55\14\0\6\55"+
    "\1\61\4\55\1\103\2\55\1\104\11\55\3\0\2\55"+
    "\10\0\1\55\14\0\1\105\27\55\3\0\2\55\10\0"+
    "\1\55\14\0\3\55\1\106\4\55\1\107\5\55\1\110"+
    "\11\55\3\0\2\55\10\0\1\55\14\0\1\111\7\55"+
    "\1\112\1\113\10\55\1\114\5\55\3\0\2\55\10\0"+
    "\1\55\14\0\1\55\1\115\26\55\3\0\2\55\10\0"+
    "\1\55\14\0\11\55\1\56\16\55\3\0\2\55\10\0"+
    "\1\55\14\0\1\116\2\55\1\117\24\55\3\0\2\55"+
    "\10\0\1\55\14\0\11\55\1\105\16\55\3\0\2\55"+
    "\10\0\1\55\14\0\27\120\1\121\1\122\2\0\2\120"+
    "\10\0\1\121\43\0\1\123\15\0\1\123\46\0\1\6"+
    "\7\0\1\6\4\0\10\124\3\125\35\124\1\126\11\124"+
    "\42\0\1\127\15\0\1\127\54\0\1\6\1\0\1\6"+
    "\60\0\1\5\1\6\60\0\2\6\1\5\16\0\27\120"+
    "\1\130\1\122\2\0\2\120\10\0\1\130\62\0\1\131"+
    "\3\51\1\132\1\133\3\51\3\134\47\51\6\135\1\52"+
    "\1\135\3\0\47\135\6\53\1\3\53\53\10\54\3\0"+
    "\47\54\13\0\30\136\3\0\2\136\10\0\1\136\14\0"+
    "\2\136\1\137\25\136\3\0\2\136\10\0\1\136\14\0"+
    "\3\136\1\140\24\136\3\0\2\136\10\0\1\136\14\0"+
    "\12\136\1\137\15\136\3\0\2\136\10\0\1\136\14\0"+
    "\13\136\1\137\14\136\3\0\2\136\10\0\1\136\14\0"+
    "\17\136\1\137\10\136\3\0\2\136\10\0\1\136\14\0"+
    "\20\136\1\141\7\136\3\0\2\136\10\0\1\136\14\0"+
    "\1\142\13\136\1\143\7\136\1\144\3\136\3\0\2\136"+
    "\10\0\1\136\14\0\13\136\1\145\14\136\3\0\2\136"+
    "\10\0\1\136\14\0\7\136\1\146\20\136\3\0\2\136"+
    "\10\0\1\136\14\0\11\136\1\147\16\136\3\0\2\136"+
    "\10\0\1\136\14\0\15\136\1\145\12\136\3\0\2\136"+
    "\10\0\1\136\14\0\13\136\1\150\14\136\3\0\2\136"+
    "\10\0\1\136\14\0\12\136\1\151\1\137\14\136\3\0"+
    "\2\136\10\0\1\136\14\0\5\136\1\152\22\136\3\0"+
    "\2\136\10\0\1\136\14\0\1\136\1\153\26\136\3\0"+
    "\2\136\10\0\1\136\14\0\22\136\1\145\5\136\3\0"+
    "\2\136\10\0\1\136\14\0\24\136\1\145\3\136\3\0"+
    "\2\136\10\0\1\136\14\0\6\136\1\154\21\136\3\0"+
    "\2\136\10\0\1\136\14\0\1\136\1\155\26\136\3\0"+
    "\2\136\10\0\1\136\14\0\1\156\27\136\3\0\2\136"+
    "\10\0\1\136\14\0\3\136\1\157\24\136\3\0\2\136"+
    "\10\0\1\136\14\0\11\136\1\160\16\136\3\0\2\136"+
    "\10\0\1\136\14\0\3\136\1\137\24\136\3\0\2\136"+
    "\10\0\1\136\14\0\10\136\1\161\17\136\3\0\2\136"+
    "\10\0\1\136\14\0\13\136\1\162\14\136\3\0\2\136"+
    "\10\0\1\136\14\0\10\136\1\163\17\136\3\0\2\136"+
    "\10\0\1\136\14\0\12\136\1\164\15\136\3\0\2\136"+
    "\10\0\1\136\14\0\12\136\1\145\15\136\3\0\2\136"+
    "\10\0\1\136\14\0\3\136\1\165\24\136\3\0\2\136"+
    "\10\0\1\136\14\0\1\136\1\166\26\136\3\0\2\136"+
    "\10\0\1\136\14\0\13\136\1\167\14\136\3\0\2\136"+
    "\10\0\1\136\14\0\14\136\1\170\13\136\3\0\2\136"+
    "\10\0\1\136\14\0\11\136\1\171\16\136\3\0\2\136"+
    "\10\0\1\136\14\0\30\172\3\0\2\172\10\0\1\172"+
    "\14\0\27\172\1\173\1\122\2\0\2\172\10\0\1\173"+
    "\43\0\1\174\15\0\1\174\22\0\1\175\20\0\1\123"+
    "\1\0\1\175\2\0\1\175\10\0\1\123\1\0\50\125"+
    "\1\176\11\125\10\177\3\0\35\177\1\126\11\177\42\0"+
    "\1\200\15\0\1\200\14\0\27\172\1\201\1\122\2\0"+
    "\2\172\10\0\1\201\10\0\1\202\52\0\3\133\1\132"+
    "\1\203\3\133\3\0\52\133\1\132\4\133\3\0\47\133"+
    "\3\134\1\204\1\0\55\134\13\0\30\205\3\0\2\205"+
    "\10\0\1\205\14\0\1\206\27\205\3\0\2\205\10\0"+
    "\1\205\14\0\1\205\1\207\26\205\3\0\2\205\10\0"+
    "\1\205\14\0\2\205\1\210\7\205\1\210\15\205\3\0"+
    "\2\205\10\0\1\205\14\0\11\205\1\211\16\205\3\0"+
    "\2\205\10\0\1\205\14\0\6\205\1\212\21\205\3\0"+
    "\2\205\10\0\1\205\14\0\6\205\1\210\21\205\3\0"+
    "\2\205\10\0\1\205\14\0\10\205\1\213\17\205\3\0"+
    "\2\205\10\0\1\205\14\0\12\205\1\214\15\205\3\0"+
    "\2\205\10\0\1\205\14\0\11\205\1\210\16\205\3\0"+
    "\2\205\10\0\1\205\14\0\10\205\1\215\17\205\3\0"+
    "\2\205\10\0\1\205\14\0\6\205\1\216\21\205\3\0"+
    "\2\205\10\0\1\205\14\0\7\205\1\217\20\205\3\0"+
    "\2\205\10\0\1\205\14\0\1\205\1\210\26\205\3\0"+
    "\2\205\10\0\1\205\14\0\15\205\1\220\12\205\3\0"+
    "\2\205\10\0\1\205\14\0\3\205\1\210\24\205\3\0"+
    "\2\205\10\0\1\205\14\0\10\205\1\221\17\205\3\0"+
    "\2\205\10\0\1\205\14\0\3\205\1\222\24\205\3\0"+
    "\2\205\10\0\1\205\14\0\13\205\1\223\14\205\3\0"+
    "\2\205\10\0\1\205\14\0\16\205\1\210\11\205\3\0"+
    "\2\205\10\0\1\205\14\0\12\205\1\223\15\205\3\0"+
    "\2\205\10\0\1\205\14\0\15\205\1\223\12\205\3\0"+
    "\2\205\10\0\1\205\14\0\20\205\1\224\7\205\3\0"+
    "\2\205\10\0\1\205\14\0\14\205\1\225\13\205\3\0"+
    "\2\205\10\0\1\205\14\0\10\205\1\216\17\205\3\0"+
    "\2\205\10\0\1\205\14\0\25\205\1\226\2\205\3\0"+
    "\2\205\10\0\1\205\14\0\7\205\1\227\4\205\1\230"+
    "\13\205\3\0\2\205\10\0\1\205\14\0\30\231\3\0"+
    "\2\231\10\0\1\231\14\0\27\231\1\232\1\122\2\0"+
    "\2\231\10\0\1\232\22\0\1\175\20\0\1\174\1\0"+
    "\1\175\2\0\1\175\10\0\1\174\43\0\1\233\2\0"+
    "\1\234\5\0\1\234\4\0\1\233\43\0\1\176\15\0"+
    "\1\176\14\0\27\231\1\235\1\122\2\0\2\231\10\0"+
    "\1\235\10\0\1\54\56\0\1\3\70\0\30\236\3\0"+
    "\2\236\10\0\1\236\14\0\4\236\1\237\23\236\3\0"+
    "\2\236\10\0\1\236\14\0\13\236\1\240\14\236\3\0"+
    "\2\236\10\0\1\236\14\0\3\236\1\241\24\236\3\0"+
    "\2\236\10\0\1\236\14\0\1\242\27\236\3\0\2\236"+
    "\10\0\1\236\14\0\1\236\1\237\26\236\3\0\2\236"+
    "\10\0\1\236\14\0\6\236\1\243\21\236\3\0\2\236"+
    "\10\0\1\236\14\0\1\236\1\244\26\236\3\0\2\236"+
    "\10\0\1\236\14\0\12\236\1\237\15\236\3\0\2\236"+
    "\10\0\1\236\14\0\10\236\1\245\17\236\3\0\2\236"+
    "\10\0\1\236\14\0\13\236\1\237\14\236\3\0\2\236"+
    "\10\0\1\236\14\0\1\236\1\246\26\236\3\0\2\236"+
    "\10\0\1\236\14\0\13\236\1\247\14\236\3\0\2\236"+
    "\10\0\1\236\14\0\6\236\1\237\21\236\3\0\2\236"+
    "\10\0\1\236\14\0\1\250\27\236\3\0\2\236\10\0"+
    "\1\236\14\0\13\236\1\251\14\236\3\0\2\236\10\0"+
    "\1\236\14\0\6\236\1\241\21\236\3\0\2\236\10\0"+
    "\1\236\14\0\3\236\1\252\24\236\3\0\2\236\10\0"+
    "\1\236\14\0\6\236\1\253\21\236\3\0\2\236\10\0"+
    "\1\236\14\0\30\254\3\0\2\254\10\0\1\254\14\0"+
    "\27\254\1\255\1\122\2\0\2\254\10\0\1\255\43\0"+
    "\1\233\15\0\1\233\14\0\27\254\1\256\1\122\2\0"+
    "\2\254\10\0\1\256\14\0\30\257\3\0\2\257\10\0"+
    "\1\257\14\0\11\257\1\260\16\257\3\0\2\257\10\0"+
    "\1\257\14\0\2\257\1\260\25\257\3\0\2\257\10\0"+
    "\1\257\14\0\13\257\1\260\14\257\3\0\2\257\10\0"+
    "\1\257\14\0\1\261\27\257\3\0\2\257\10\0\1\257"+
    "\14\0\6\257\1\260\21\257\3\0\2\257\10\0\1\257"+
    "\14\0\1\257\1\262\26\257\3\0\2\257\10\0\1\257"+
    "\14\0\7\257\1\260\20\257\3\0\2\257\10\0\1\257"+
    "\14\0\10\257\1\263\17\257\3\0\2\257\10\0\1\257"+
    "\14\0\3\257\1\264\24\257\3\0\2\257\10\0\1\257"+
    "\14\0\10\257\1\265\17\257\3\0\2\257\10\0\1\257"+
    "\14\0\1\266\27\257\3\0\2\257\10\0\1\257\14\0"+
    "\2\257\1\267\25\257\3\0\2\257\10\0\1\257\14\0"+
    "\30\270\3\0\2\270\10\0\1\270\14\0\27\270\1\271"+
    "\1\122\2\0\2\270\10\0\1\271\14\0\27\270\1\272"+
    "\1\122\2\0\2\270\10\0\1\272\14\0\30\273\3\0"+
    "\2\273\10\0\1\273\14\0\1\273\1\274\26\273\3\0"+
    "\2\273\10\0\1\273\14\0\13\273\1\274\14\273\3\0"+
    "\2\273\10\0\1\273\14\0\1\273\1\275\26\273\3\0"+
    "\2\273\10\0\1\273\14\0\2\273\1\274\25\273\3\0"+
    "\2\273\10\0\1\273\14\0\11\273\1\276\16\273\3\0"+
    "\2\273\10\0\1\273\14\0\23\273\1\274\4\273\3\0"+
    "\2\273\10\0\1\273\14\0\22\273\1\277\5\273\3\0"+
    "\2\273\10\0\1\273\14\0\30\300\3\0\2\300\10\0"+
    "\1\300\14\0\27\300\1\301\1\122\2\0\2\300\10\0"+
    "\1\301\14\0\27\300\1\302\1\122\2\0\2\300\10\0"+
    "\1\302\14\0\30\303\3\0\2\303\10\0\1\303\14\0"+
    "\13\303\1\304\14\303\3\0\2\303\10\0\1\303\14\0"+
    "\1\303\1\304\26\303\3\0\2\303\10\0\1\303\14\0"+
    "\3\303\1\305\24\303\3\0\2\303\10\0\1\303\14\0"+
    "\30\306\3\0\2\306\10\0\1\306\14\0\27\306\1\307"+
    "\1\122\2\0\2\306\10\0\1\307\14\0\27\306\1\310"+
    "\1\122\2\0\2\306\10\0\1\310\14\0\30\311\3\0"+
    "\2\311\10\0\1\311\14\0\6\311\1\312\21\311\3\0"+
    "\2\311\10\0\1\311\14\0\30\313\3\0\2\313\10\0"+
    "\1\313\14\0\27\313\1\314\1\122\2\0\2\313\10\0"+
    "\1\314\14\0\27\313\1\315\1\122\2\0\2\313\10\0"+
    "\1\315\14\0\30\316\3\0\2\316\10\0\1\316\14\0"+
    "\30\317\3\0\2\317\10\0\1\317\14\0\27\317\1\320"+
    "\1\122\2\0\2\317\10\0\1\320\14\0\27\317\1\321"+
    "\1\122\2\0\2\317\10\0\1\321\14\0\30\322\3\0"+
    "\2\322\10\0\1\322\14\0\30\323\3\0\2\323\10\0"+
    "\1\323\14\0\27\323\1\324\1\122\2\0\2\323\10\0"+
    "\1\324\14\0\27\323\1\325\1\122\2\0\2\323\10\0"+
    "\1\325\14\0\30\326\3\0\2\326\10\0\1\326\14\0"+
    "\30\327\3\0\2\327\10\0\1\327\14\0\27\327\1\330"+
    "\1\122\2\0\2\327\10\0\1\330\14\0\27\327\1\331"+
    "\1\122\2\0\2\327\10\0\1\331\14\0\30\332\3\0"+
    "\2\332\10\0\1\332\14\0\30\333\3\0\2\333\10\0"+
    "\1\333\14\0\27\333\1\334\1\122\2\0\2\333\10\0"+
    "\1\334\14\0\27\333\1\335\1\122\2\0\2\333\10\0"+
    "\1\335\14\0\30\336\3\0\2\336\10\0\1\336\14\0"+
    "\30\337\3\0\2\337\10\0\1\337\14\0\27\337\1\340"+
    "\1\122\2\0\2\337\10\0\1\340\14\0\27\337\1\341"+
    "\1\122\2\0\2\337\10\0\1\341\14\0\30\342\3\0"+
    "\2\342\10\0\1\342\14\0\30\343\3\0\2\343\10\0"+
    "\1\343\14\0\27\343\1\344\1\122\2\0\2\343\10\0"+
    "\1\344\14\0\27\343\1\345\1\122\2\0\2\343\10\0"+
    "\1\345\14\0\30\346\3\0\2\346\10\0\1\346\14\0"+
    "\30\347\3\0\2\347\10\0\1\347\14\0\27\347\1\350"+
    "\1\122\2\0\2\347\10\0\1\350\14\0\27\347\1\351"+
    "\1\122\2\0\2\347\10\0\1\351\14\0\30\352\3\0"+
    "\2\352\10\0\1\352\14\0\30\353\3\0\2\353\10\0"+
    "\1\353\14\0\27\353\1\354\1\122\2\0\2\353\10\0"+
    "\1\354\14\0\27\353\1\355\1\122\2\0\2\353\10\0"+
    "\1\355\14\0\30\356\3\0\2\356\10\0\1\356\14\0"+
    "\30\357\3\0\2\357\10\0\1\357\14\0\27\357\1\360"+
    "\1\122\2\0\2\357\10\0\1\360\14\0\27\357\1\361"+
    "\1\122\2\0\2\357\10\0\1\361\14\0\30\362\3\0"+
    "\2\362\10\0\1\362\14\0\30\363\3\0\2\363\10\0"+
    "\1\363\14\0\27\363\1\364\1\122\2\0\2\363\10\0"+
    "\1\364\14\0\27\363\1\365\1\122\2\0\2\363\10\0"+
    "\1\365\14\0\30\366\3\0\2\366\10\0\1\366\14\0"+
    "\30\367\3\0\2\367\10\0\1\367\14\0\27\367\1\370"+
    "\1\122\2\0\2\367\10\0\1\370\14\0\27\367\1\371"+
    "\1\122\2\0\2\367\10\0\1\371\14\0\30\372\3\0"+
    "\2\372\10\0\1\372\14\0\30\373\3\0\2\373\10\0"+
    "\1\373\14\0\27\373\1\374\1\122\2\0\2\373\10\0"+
    "\1\374\14\0\27\373\1\375\1\122\2\0\2\373\10\0"+
    "\1\375\14\0\30\376\3\0\2\376\10\0\1\376\14\0"+
    "\30\377\3\0\2\377\10\0\1\377\14\0\27\377\1\u0100"+
    "\1\122\2\0\2\377\10\0\1\u0100\14\0\27\377\1\u0101"+
    "\1\122\2\0\2\377\10\0\1\u0101\14\0\30\u0102\3\0"+
    "\2\u0102\10\0\1\u0102\14\0\30\u0103\3\0\2\u0103\10\0"+
    "\1\u0103\14\0\27\u0103\1\u0104\1\122\2\0\2\u0103\10\0"+
    "\1\u0104\14\0\27\u0103\1\u0105\1\122\2\0\2\u0103\10\0"+
    "\1\u0105\14\0\30\u0106\3\0\2\u0106\10\0\1\u0106\14\0"+
    "\30\u0107\3\0\2\u0107\10\0\1\u0107\14\0\27\u0107\1\u0108"+
    "\1\122\2\0\2\u0107\10\0\1\u0108\14\0\27\u0107\1\u0109"+
    "\1\122\2\0\2\u0107\10\0\1\u0109\14\0\30\u010a\3\0"+
    "\2\u010a\10\0\1\u010a\14\0\30\u010b\3\0\2\u010b\10\0"+
    "\1\u010b\14\0\27\u010b\1\u010c\1\122\2\0\2\u010b\10\0"+
    "\1\u010c\14\0\27\u010b\1\u010d\1\122\2\0\2\u010b\10\0"+
    "\1\u010d\14\0\30\u010e\3\0\2\u010e\10\0\1\u010e\14\0"+
    "\30\u010f\3\0\2\u010f\10\0\1\u010f\14\0\27\u010f\1\u0110"+
    "\1\122\2\0\2\u010f\10\0\1\u0110\14\0\27\u010f\1\u0111"+
    "\1\122\2\0\2\u010f\10\0\1\u0111\14\0\30\u0112\3\0"+
    "\2\u0112\10\0\1\u0112\14\0\30\u0113\3\0\2\u0113\10\0"+
    "\1\u0113\14\0\27\u0113\1\u0114\1\122\2\0\2\u0113\10\0"+
    "\1\u0114\14\0\27\u0113\1\u0115\1\122\2\0\2\u0113\10\0"+
    "\1\u0115\14\0\30\u0116\3\0\2\u0116\10\0\1\u0116\14\0"+
    "\30\u0117\3\0\2\u0117\10\0\1\u0117\14\0\27\u0117\1\u0118"+
    "\1\122\2\0\2\u0117\10\0\1\u0118\14\0\27\u0117\1\u0119"+
    "\1\122\2\0\2\u0117\10\0\1\u0119\14\0\30\u011a\3\0"+
    "\2\u011a\10\0\1\u011a\14\0\30\u011b\3\0\2\u011b\10\0"+
    "\1\u011b\14\0\27\u011b\1\u011c\1\122\2\0\2\u011b\10\0"+
    "\1\u011c\14\0\27\u011b\1\u011d\1\122\2\0\2\u011b\10\0"+
    "\1\u011d\14\0\30\u011e\3\0\2\u011e\10\0\1\u011e\14\0"+
    "\30\u011f\3\0\2\u011f\10\0\1\u011f\14\0\27\u011f\1\u0120"+
    "\1\122\2\0\2\u011f\10\0\1\u0120\14\0\27\u011f\1\u0121"+
    "\1\122\2\0\2\u011f\10\0\1\u0121\14\0\30\u0122\3\0"+
    "\2\u0122\10\0\1\u0122\14\0\30\u0123\3\0\2\u0123\10\0"+
    "\1\u0123\14\0\27\u0123\1\u0124\1\122\2\0\2\u0123\10\0"+
    "\1\u0124\14\0\27\u0123\1\u0125\1\122\2\0\2\u0123\10\0"+
    "\1\u0125\14\0\30\u0126\3\0\2\u0126\10\0\1\u0126\14\0"+
    "\30\u0127\3\0\2\u0127\10\0\1\u0127\14\0\27\u0127\1\u0128"+
    "\1\122\2\0\2\u0127\10\0\1\u0128\14\0\27\u0127\1\u0129"+
    "\1\122\2\0\2\u0127\10\0\1\u0129\14\0\30\u012a\3\0"+
    "\2\u012a\10\0\1\u012a\14\0\30\u012b\3\0\2\u012b\10\0"+
    "\1\u012b\14\0\27\u012b\1\u012c\1\122\2\0\2\u012b\10\0"+
    "\1\u012c\14\0\27\u012b\1\u012d\1\122\2\0\2\u012b\10\0"+
    "\1\u012d\14\0\30\u012e\3\0\2\u012e\10\0\1\u012e\14\0"+
    "\30\u012f\3\0\2\u012f\10\0\1\u012f\14\0\27\u012f\1\u0130"+
    "\1\122\2\0\2\u012f\10\0\1\u0130\14\0\27\u012f\1\u0131"+
    "\1\122\2\0\2\u012f\10\0\1\u0131\14\0\30\u0132\3\0"+
    "\2\u0132\10\0\1\u0132\14\0\30\u0133\3\0\2\u0133\10\0"+
    "\1\u0133\14\0\27\u0133\1\u0134\1\122\2\0\2\u0133\10\0"+
    "\1\u0134\14\0\27\u0133\1\u0135\1\122\2\0\2\u0133\10\0"+
    "\1\u0135\14\0\30\u0136\3\0\2\u0136\10\0\1\u0136\14\0"+
    "\30\u0137\3\0\2\u0137\10\0\1\u0137\14\0\27\u0137\1\u0138"+
    "\1\122\2\0\2\u0137\10\0\1\u0138\14\0\27\u0137\1\u0139"+
    "\1\122\2\0\2\u0137\10\0\1\u0139\14\0\30\u013a\3\0"+
    "\2\u013a\10\0\1\u013a\14\0\30\u013b\3\0\2\u013b\10\0"+
    "\1\u013b\14\0\27\u013b\1\u013c\1\122\2\0\2\u013b\10\0"+
    "\1\u013c\14\0\27\u013b\1\u013d\1\122\2\0\2\u013b\10\0"+
    "\1\u013d\14\0\30\u013e\3\0\2\u013e\10\0\1\u013e\14\0"+
    "\30\u013f\3\0\2\u013f\10\0\1\u013f\14\0\27\u013f\1\u0140"+
    "\1\122\2\0\2\u013f\10\0\1\u0140\14\0\27\u013f\1\u0141"+
    "\1\122\2\0\2\u013f\10\0\1\u0141\14\0\30\u0142\3\0"+
    "\2\u0142\10\0\1\u0142\14\0\30\u0143\3\0\2\u0143\10\0"+
    "\1\u0143\14\0\27\u0143\1\u0144\1\122\2\0\2\u0143\10\0"+
    "\1\u0144\14\0\27\u0143\1\u0145\1\122\2\0\2\u0143\10\0"+
    "\1\u0145\14\0\30\u0146\3\0\2\u0146\10\0\1\u0146\14\0"+
    "\30\u0147\3\0\2\u0147\10\0\1\u0147\14\0\27\u0147\1\u0148"+
    "\1\122\2\0\2\u0147\10\0\1\u0148\14\0\27\u0147\1\u0149"+
    "\1\122\2\0\2\u0147\10\0\1\u0149\14\0\30\u014a\3\0"+
    "\2\u014a\10\0\1\u014a\14\0\30\u014b\3\0\2\u014b\10\0"+
    "\1\u014b\14\0\27\u014b\1\u014c\1\122\2\0\2\u014b\10\0"+
    "\1\u014c\14\0\27\u014b\1\u014d\1\122\2\0\2\u014b\10\0"+
    "\1\u014d\14\0\30\u014e\3\0\2\u014e\10\0\1\u014e\14\0"+
    "\30\u014f\3\0\2\u014f\10\0\1\u014f\14\0\27\u014f\1\u0150"+
    "\1\122\2\0\2\u014f\10\0\1\u0150\14\0\27\u014f\1\u0151"+
    "\1\122\2\0\2\u014f\10\0\1\u0151\14\0\30\u0152\3\0"+
    "\2\u0152\10\0\1\u0152\14\0\30\u0153\3\0\2\u0153\10\0"+
    "\1\u0153\14\0\27\u0153\1\u0154\1\122\2\0\2\u0153\10\0"+
    "\1\u0154\14\0\27\u0153\1\u0155\1\122\2\0\2\u0153\10\0"+
    "\1\u0155\14\0\30\u0156\3\0\2\u0156\10\0\1\u0156\14\0"+
    "\30\u0157\3\0\2\u0157\10\0\1\u0157\14\0\27\u0157\1\u0158"+
    "\1\122\2\0\2\u0157\10\0\1\u0158\14\0\27\u0157\1\u0159"+
    "\1\122\2\0\2\u0157\10\0\1\u0159\14\0\30\u015a\3\0"+
    "\2\u015a\10\0\1\u015a\14\0\30\u015b\3\0\2\u015b\10\0"+
    "\1\u015b\14\0\27\u015b\1\u015c\1\122\2\0\2\u015b\10\0"+
    "\1\u015c\14\0\27\u015b\1\u015d\1\122\2\0\2\u015b\10\0"+
    "\1\u015d\14\0\30\u015e\3\0\2\u015e\10\0\1\u015e\14\0"+
    "\30\u015f\3\0\2\u015f\10\0\1\u015f\14\0\27\u015f\1\u0160"+
    "\1\122\2\0\2\u015f\10\0\1\u0160\14\0\27\u015f\1\u0161"+
    "\1\122\2\0\2\u015f\10\0\1\u0161\14\0\30\u0162\3\0"+
    "\2\u0162\10\0\1\u0162\14\0\30\u0163\3\0\2\u0163\10\0"+
    "\1\u0163\14\0\27\u0163\1\u0164\1\122\2\0\2\u0163\10\0"+
    "\1\u0164\14\0\27\u0163\1\u0165\1\122\2\0\2\u0163\10\0"+
    "\1\u0165\14\0\30\u0166\3\0\2\u0166\10\0\1\u0166\14\0"+
    "\30\u0167\3\0\2\u0167\10\0\1\u0167\14\0\27\u0167\1\u0168"+
    "\1\122\2\0\2\u0167\10\0\1\u0168\14\0\27\u0167\1\u0169"+
    "\1\122\2\0\2\u0167\10\0\1\u0169\14\0\30\u016a\3\0"+
    "\2\u016a\10\0\1\u016a\14\0\30\u016b\3\0\2\u016b\10\0"+
    "\1\u016b\14\0\27\u016b\1\u016c\1\122\2\0\2\u016b\10\0"+
    "\1\u016c\14\0\27\u016b\1\u016d\1\122\2\0\2\u016b\10\0"+
    "\1\u016d\14\0\30\u016e\3\0\2\u016e\10\0\1\u016e\14\0"+
    "\30\u016f\3\0\2\u016f\10\0\1\u016f\14\0\27\u016f\1\u0170"+
    "\1\122\2\0\2\u016f\10\0\1\u0170\14\0\27\u016f\1\u0171"+
    "\1\122\2\0\2\u016f\10\0\1\u0171\14\0\30\u0172\3\0"+
    "\2\u0172\10\0\1\u0172\14\0\30\u0173\3\0\2\u0173\10\0"+
    "\1\u0173\14\0\27\u0173\1\u0174\1\122\2\0\2\u0173\10\0"+
    "\1\u0174\14\0\27\u0173\1\u0175\1\122\2\0\2\u0173\10\0"+
    "\1\u0175\14\0\30\u0176\3\0\2\u0176\10\0\1\u0176\14\0"+
    "\30\u0177\3\0\2\u0177\10\0\1\u0177\14\0\27\u0177\1\u0178"+
    "\1\122\2\0\2\u0177\10\0\1\u0178\14\0\27\u0177\1\u0179"+
    "\1\122\2\0\2\u0177\10\0\1\u0179\14\0\30\u017a\3\0"+
    "\2\u017a\10\0\1\u017a\14\0\30\u017b\3\0\2\u017b\10\0"+
    "\1\u017b\14\0\27\u017b\1\u017c\1\122\2\0\2\u017b\10\0"+
    "\1\u017c\14\0\27\u017b\1\u017d\1\122\2\0\2\u017b\10\0"+
    "\1\u017d\14\0\30\u017e\3\0\2\u017e\10\0\1\u017e\14\0"+
    "\30\u017f\3\0\2\u017f\10\0\1\u017f\14\0\27\u017f\1\u0180"+
    "\1\122\2\0\2\u017f\10\0\1\u0180\14\0\27\u017f\1\u0181"+
    "\1\122\2\0\2\u017f\10\0\1\u0181\14\0\30\u0182\3\0"+
    "\2\u0182\10\0\1\u0182\14\0\30\u0183\3\0\2\u0183\10\0"+
    "\1\u0183\14\0\27\u0183\1\u0184\1\122\2\0\2\u0183\10\0"+
    "\1\u0184\14\0\27\u0183\1\u0185\1\122\2\0\2\u0183\10\0"+
    "\1\u0185\14\0\30\u0186\3\0\2\u0186\10\0\1\u0186\14\0"+
    "\30\u0187\3\0\2\u0187\10\0\1\u0187\14\0\27\u0187\1\u0188"+
    "\1\122\2\0\2\u0187\10\0\1\u0188\14\0\27\u0187\1\u0189"+
    "\1\122\2\0\2\u0187\10\0\1\u0189\14\0\30\u018a\3\0"+
    "\2\u018a\10\0\1\u018a\14\0\30\u018b\3\0\2\u018b\10\0"+
    "\1\u018b\14\0\27\u018b\1\u018c\1\122\2\0\2\u018b\10\0"+
    "\1\u018c\14\0\27\u018b\1\u018d\1\122\2\0\2\u018b\10\0"+
    "\1\u018d\14\0\30\u018e\3\0\2\u018e\10\0\1\u018e\14\0"+
    "\30\u018f\3\0\2\u018f\10\0\1\u018f\14\0\27\u018f\1\u0190"+
    "\1\122\2\0\2\u018f\10\0\1\u0190\14\0\27\u018f\1\u0191"+
    "\1\122\2\0\2\u018f\10\0\1\u0191\14\0\30\u0192\3\0"+
    "\2\u0192\10\0\1\u0192\14\0\30\u0193\3\0\2\u0193\10\0"+
    "\1\u0193\14\0\27\u0193\1\u0194\1\122\2\0\2\u0193\10\0"+
    "\1\u0194\14\0\27\u0193\1\u0195\1\122\2\0\2\u0193\10\0"+
    "\1\u0195\14\0\30\u0196\3\0\2\u0196\10\0\1\u0196\14\0"+
    "\30\u0197\3\0\2\u0197\10\0\1\u0197\14\0\27\u0197\1\u0198"+
    "\1\122\2\0\2\u0197\10\0\1\u0198\14\0\27\u0197\1\u0199"+
    "\1\122\2\0\2\u0197\10\0\1\u0199\14\0\30\u019a\3\0"+
    "\2\u019a\10\0\1\u019a\14\0\30\u019b\3\0\2\u019b\10\0"+
    "\1\u019b\14\0\27\u019b\1\u019c\1\122\2\0\2\u019b\10\0"+
    "\1\u019c\14\0\27\u019b\1\u019d\1\122\2\0\2\u019b\10\0"+
    "\1\u019d\14\0\30\u019e\3\0\2\u019e\10\0\1\u019e\14\0"+
    "\30\u019f\3\0\2\u019f\10\0\1\u019f\14\0\27\u019f\1\u01a0"+
    "\1\122\2\0\2\u019f\10\0\1\u01a0\14\0\27\u019f\1\u01a1"+
    "\1\122\2\0\2\u019f\10\0\1\u01a1\14\0\30\u01a2\3\0"+
    "\2\u01a2\10\0\1\u01a2\14\0\30\u01a3\3\0\2\u01a3\10\0"+
    "\1\u01a3\14\0\27\u01a3\1\u01a4\1\122\2\0\2\u01a3\10\0"+
    "\1\u01a4\14\0\27\u01a3\1\u01a5\1\122\2\0\2\u01a3\10\0"+
    "\1\u01a5\14\0\30\u01a6\3\0\2\u01a6\10\0\1\u01a6\14\0"+
    "\30\u01a7\3\0\2\u01a7\10\0\1\u01a7\14\0\27\u01a7\1\u01a8"+
    "\1\122\2\0\2\u01a7\10\0\1\u01a8\14\0\27\u01a7\1\u01a9"+
    "\1\122\2\0\2\u01a7\10\0\1\u01a9\14\0\30\u01aa\3\0"+
    "\2\u01aa\10\0\1\u01aa\14\0\30\u01ab\3\0\2\u01ab\10\0"+
    "\1\u01ab\14\0\27\u01ab\1\u01ac\1\122\2\0\2\u01ab\10\0"+
    "\1\u01ac\14\0\27\u01ab\1\u01ad\1\122\2\0\2\u01ab\10\0"+
    "\1\u01ad\14\0\30\u01ae\3\0\2\u01ae\10\0\1\u01ae\14\0"+
    "\30\u01af\3\0\2\u01af\10\0\1\u01af\14\0\27\u01af\1\u01b0"+
    "\1\122\2\0\2\u01af\10\0\1\u01b0\14\0\27\u01af\1\u01b1"+
    "\1\122\2\0\2\u01af\10\0\1\u01b1\14\0\30\u01b2\3\0"+
    "\2\u01b2\10\0\1\u01b2\14\0\30\u01b3\3\0\2\u01b3\10\0"+
    "\1\u01b3\14\0\27\u01b3\1\u01b4\1\122\2\0\2\u01b3\10\0"+
    "\1\u01b4\14\0\27\u01b3\1\u01b5\1\122\2\0\2\u01b3\10\0"+
    "\1\u01b5\14\0\30\u01b6\3\0\2\u01b6\10\0\1\u01b6\14\0"+
    "\30\u01b7\3\0\2\u01b7\10\0\1\u01b7\14\0\27\u01b7\1\u01b8"+
    "\1\122\2\0\2\u01b7\10\0\1\u01b8\14\0\27\u01b7\1\u01b9"+
    "\1\122\2\0\2\u01b7\10\0\1\u01b9\14\0\30\u01ba\3\0"+
    "\2\u01ba\10\0\1\u01ba\14\0\30\u01bb\3\0\2\u01bb\10\0"+
    "\1\u01bb\14\0\27\u01bb\1\u01bc\1\122\2\0\2\u01bb\10\0"+
    "\1\u01bc\14\0\27\u01bb\1\u01bd\1\122\2\0\2\u01bb\10\0"+
    "\1\u01bd\14\0\30\u01be\3\0\2\u01be\10\0\1\u01be\14\0"+
    "\30\u01bf\3\0\2\u01bf\10\0\1\u01bf\14\0\27\u01bf\1\u01c0"+
    "\1\122\2\0\2\u01bf\10\0\1\u01c0\14\0\27\u01bf\1\u01c1"+
    "\1\122\2\0\2\u01bf\10\0\1\u01c1\14\0\30\u01c2\3\0"+
    "\2\u01c2\10\0\1\u01c2\14\0\30\u01c3\3\0\2\u01c3\10\0"+
    "\1\u01c3\14\0\27\u01c3\1\u01c4\1\122\2\0\2\u01c3\10\0"+
    "\1\u01c4\14\0\27\u01c3\1\u01c5\1\122\2\0\2\u01c3\10\0"+
    "\1\u01c5\14\0\30\u01c6\3\0\2\u01c6\10\0\1\u01c6\14\0"+
    "\30\u01c7\3\0\2\u01c7\10\0\1\u01c7\14\0\27\u01c7\1\u01c8"+
    "\1\122\2\0\2\u01c7\10\0\1\u01c8\14\0\27\u01c7\1\u01c9"+
    "\1\122\2\0\2\u01c7\10\0\1\u01c9\14\0\30\u01ca\3\0"+
    "\2\u01ca\10\0\1\u01ca\14\0\30\u01cb\3\0\2\u01cb\10\0"+
    "\1\u01cb\14\0\27\u01cb\1\u01cc\1\122\2\0\2\u01cb\10\0"+
    "\1\u01cc\14\0\27\u01cb\1\u01cd\1\122\2\0\2\u01cb\10\0"+
    "\1\u01cd\14\0\30\u01ce\3\0\2\u01ce\10\0\1\u01ce\14\0"+
    "\30\u01cf\3\0\2\u01cf\10\0\1\u01cf\14\0\27\u01cf\1\u01d0"+
    "\1\122\2\0\2\u01cf\10\0\1\u01d0\14\0\27\u01cf\1\u01d1"+
    "\1\122\2\0\2\u01cf\10\0\1\u01d1\14\0\30\u01d2\3\0"+
    "\2\u01d2\10\0\1\u01d2\14\0\30\u01d3\3\0\2\u01d3\10\0"+
    "\1\u01d3\14\0\27\u01d3\1\u01d4\1\122\2\0\2\u01d3\10\0"+
    "\1\u01d4\14\0\27\u01d3\1\u01d5\1\122\2\0\2\u01d3\10\0"+
    "\1\u01d5\14\0\30\u01d6\3\0\2\u01d6\10\0\1\u01d6\14\0"+
    "\30\u01d7\3\0\2\u01d7\10\0\1\u01d7\14\0\27\u01d7\1\u01d8"+
    "\1\122\2\0\2\u01d7\10\0\1\u01d8\14\0\27\u01d7\1\u01d9"+
    "\1\122\2\0\2\u01d7\10\0\1\u01d9\14\0\30\u01da\3\0"+
    "\2\u01da\10\0\1\u01da\14\0\30\u01db\3\0\2\u01db\10\0"+
    "\1\u01db\14\0\27\u01db\1\u01dc\1\122\2\0\2\u01db\10\0"+
    "\1\u01dc\14\0\27\u01db\1\u01dd\1\122\2\0\2\u01db\10\0"+
    "\1\u01dd\14\0\30\u01de\3\0\2\u01de\10\0\1\u01de\14\0"+
    "\30\u01df\3\0\2\u01df\10\0\1\u01df\14\0\27\u01df\1\u01e0"+
    "\1\122\2\0\2\u01df\10\0\1\u01e0\14\0\27\u01df\1\u01e1"+
    "\1\122\2\0\2\u01df\10\0\1\u01e1\14\0\30\u01e2\3\0"+
    "\2\u01e2\10\0\1\u01e2\14\0\30\u01e3\3\0\2\u01e3\10\0"+
    "\1\u01e3\14\0\27\u01e3\1\u01e4\1\122\2\0\2\u01e3\10\0"+
    "\1\u01e4\14\0\27\u01e3\1\u01e5\1\122\2\0\2\u01e3\10\0"+
    "\1\u01e5\14\0\30\u01e6\3\0\2\u01e6\10\0\1\u01e6\14\0"+
    "\30\u01e7\3\0\2\u01e7\10\0\1\u01e7\14\0\27\u01e7\1\u01e8"+
    "\1\122\2\0\2\u01e7\10\0\1\u01e8\14\0\27\u01e7\1\u01e9"+
    "\1\122\2\0\2\u01e7\10\0\1\u01e9\14\0\30\u01ea\3\0"+
    "\2\u01ea\10\0\1\u01ea\14\0\30\u01eb\3\0\2\u01eb\10\0"+
    "\1\u01eb\14\0\27\u01eb\1\u01ec\1\122\2\0\2\u01eb\10\0"+
    "\1\u01ec\14\0\27\u01eb\1\u01ed\1\122\2\0\2\u01eb\10\0"+
    "\1\u01ed\14\0\30\u01ee\3\0\2\u01ee\10\0\1\u01ee\14\0"+
    "\30\u01ef\3\0\2\u01ef\10\0\1\u01ef\14\0\27\u01ef\1\u01f0"+
    "\1\122\2\0\2\u01ef\10\0\1\u01f0\14\0\27\u01ef\1\u01f1"+
    "\1\122\2\0\2\u01ef\10\0\1\u01f1\14\0\30\u01f2\3\0"+
    "\2\u01f2\10\0\1\u01f2\14\0\30\u01f3\3\0\2\u01f3\10\0"+
    "\1\u01f3\14\0\27\u01f3\1\u01f4\1\122\2\0\2\u01f3\10\0"+
    "\1\u01f4\14\0\27\u01f3\1\u01f5\1\122\2\0\2\u01f3\10\0"+
    "\1\u01f5\14\0\30\u01f6\3\0\2\u01f6\10\0\1\u01f6\14\0"+
    "\30\u01f7\3\0\2\u01f7\10\0\1\u01f7\14\0\27\u01f7\1\u01f8"+
    "\1\122\2\0\2\u01f7\10\0\1\u01f8\14\0\27\u01f7\1\u01f9"+
    "\1\122\2\0\2\u01f7\10\0\1\u01f9\14\0\30\u01fa\3\0"+
    "\2\u01fa\10\0\1\u01fa\14\0\30\u01fb\3\0\2\u01fb\10\0"+
    "\1\u01fb\14\0\27\u01fb\1\u01fc\1\122\2\0\2\u01fb\10\0"+
    "\1\u01fc\14\0\27\u01fb\1\u01fd\1\122\2\0\2\u01fb\10\0"+
    "\1\u01fd\14\0\30\u01fe\3\0\2\u01fe\10\0\1\u01fe\14\0"+
    "\30\u01ff\3\0\2\u01ff\10\0\1\u01ff\14\0\27\u01ff\1\u0200"+
    "\1\122\2\0\2\u01ff\10\0\1\u0200\14\0\27\u01ff\1\u0201"+
    "\1\122\2\0\2\u01ff\10\0\1\u0201\14\0\30\u0202\3\0"+
    "\2\u0202\10\0\1\u0202\14\0\30\u0203\3\0\2\u0203\10\0"+
    "\1\u0203\14\0\27\u0203\1\u0204\1\122\2\0\2\u0203\10\0"+
    "\1\u0204\14\0\27\u0203\1\u0205\1\122\2\0\2\u0203\10\0"+
    "\1\u0205\14\0\30\u0206\3\0\2\u0206\10\0\1\u0206\14\0"+
    "\30\u0207\3\0\2\u0207\10\0\1\u0207\14\0\27\u0207\1\u0208"+
    "\1\122\2\0\2\u0207\10\0\1\u0208\14\0\27\u0207\1\u0209"+
    "\1\122\2\0\2\u0207\10\0\1\u0209\14\0\30\u020a\3\0"+
    "\2\u020a\10\0\1\u020a\14\0\30\u020b\3\0\2\u020b\10\0"+
    "\1\u020b\14\0\27\u020b\1\u020c\1\122\2\0\2\u020b\10\0"+
    "\1\u020c\14\0\27\u020b\1\u020d\1\122\2\0\2\u020b\10\0"+
    "\1\u020d\14\0\30\u020e\3\0\2\u020e\10\0\1\u020e\14\0"+
    "\30\u020f\3\0\2\u020f\10\0\1\u020f\14\0\27\u020f\1\u0210"+
    "\1\122\2\0\2\u020f\10\0\1\u0210\14\0\27\u020f\1\u0211"+
    "\1\122\2\0\2\u020f\10\0\1\u0211\14\0\30\u0212\3\0"+
    "\2\u0212\10\0\1\u0212\14\0\30\u0213\3\0\2\u0213\10\0"+
    "\1\u0213\14\0\27\u0213\1\u0214\1\122\2\0\2\u0213\10\0"+
    "\1\u0214\14\0\27\u0213\1\u0215\1\122\2\0\2\u0213\10\0"+
    "\1\u0215\14\0\30\u0216\3\0\2\u0216\10\0\1\u0216\14\0"+
    "\30\u0217\3\0\2\u0217\10\0\1\u0217\14\0\27\u0217\1\u0218"+
    "\1\122\2\0\2\u0217\10\0\1\u0218\14\0\27\u0217\1\u0219"+
    "\1\122\2\0\2\u0217\10\0\1\u0219\14\0\30\u021a\3\0"+
    "\2\u021a\10\0\1\u021a\14\0\30\u021b\3\0\2\u021b\10\0"+
    "\1\u021b\14\0\27\u021b\1\u021c\1\122\2\0\2\u021b\10\0"+
    "\1\u021c\14\0\27\u021b\1\u021d\1\122\2\0\2\u021b\10\0"+
    "\1\u021d\14\0\30\u021e\3\0\2\u021e\10\0\1\u021e\14\0"+
    "\30\u021f\3\0\2\u021f\10\0\1\u021f\14\0\27\u021f\1\u0220"+
    "\1\122\2\0\2\u021f\10\0\1\u0220\14\0\27\u021f\1\u0221"+
    "\1\122\2\0\2\u021f\10\0\1\u0221\14\0\30\u0222\3\0"+
    "\2\u0222\10\0\1\u0222\14\0\30\u0223\3\0\2\u0223\10\0"+
    "\1\u0223\14\0\27\u0223\1\u0224\1\122\2\0\2\u0223\10\0"+
    "\1\u0224\14\0\27\u0223\1\u0225\1\122\2\0\2\u0223\10\0"+
    "\1\u0225\14\0\30\u0226\3\0\2\u0226\10\0\1\u0226\14\0"+
    "\30\u0227\3\0\2\u0227\10\0\1\u0227\14\0\27\u0227\1\u0228"+
    "\1\122\2\0\2\u0227\10\0\1\u0228\14\0\27\u0227\1\u0229"+
    "\1\122\2\0\2\u0227\10\0\1\u0229\14\0\30\u022a\3\0"+
    "\2\u022a\10\0\1\u022a\14\0\30\u022b\3\0\2\u022b\10\0"+
    "\1\u022b\14\0\27\u022b\1\u022c\1\122\2\0\2\u022b\10\0"+
    "\1\u022c\14\0\27\u022b\1\u022d\1\122\2\0\2\u022b\10\0"+
    "\1\u022d\14\0\30\u022e\3\0\2\u022e\10\0\1\u022e\14\0"+
    "\30\u022f\3\0\2\u022f\10\0\1\u022f\14\0\27\u022f\1\u0230"+
    "\1\122\2\0\2\u022f\10\0\1\u0230\14\0\27\u022f\1\u0231"+
    "\1\122\2\0\2\u022f\10\0\1\u0231\14\0\30\u0232\3\0"+
    "\2\u0232\10\0\1\u0232\14\0\30\u0233\3\0\2\u0233\10\0"+
    "\1\u0233\14\0\27\u0233\1\u0234\1\122\2\0\2\u0233\10\0"+
    "\1\u0234\14\0\27\u0233\1\u0235\1\122\2\0\2\u0233\10\0"+
    "\1\u0235\14\0\30\u0236\3\0\2\u0236\10\0\1\u0236\14\0"+
    "\30\u0237\3\0\2\u0237\10\0\1\u0237\14\0\27\u0237\1\u0238"+
    "\1\122\2\0\2\u0237\10\0\1\u0238\14\0\27\u0237\1\u0239"+
    "\1\122\2\0\2\u0237\10\0\1\u0239\14\0\30\u023a\3\0"+
    "\2\u023a\10\0\1\u023a\14\0\30\u023b\3\0\2\u023b\10\0"+
    "\1\u023b\14\0\27\u023b\1\u023c\1\122\2\0\2\u023b\10\0"+
    "\1\u023c\14\0\27\u023b\1\u023d\1\122\2\0\2\u023b\10\0"+
    "\1\u023d\14\0\30\u023e\3\0\2\u023e\10\0\1\u023e\14\0"+
    "\30\u023f\3\0\2\u023f\10\0\1\u023f\14\0\27\u023f\1\u0240"+
    "\1\122\2\0\2\u023f\10\0\1\u0240\14\0\27\u023f\1\u0241"+
    "\1\122\2\0\2\u023f\10\0\1\u0241\14\0\30\u0242\3\0"+
    "\2\u0242\10\0\1\u0242\14\0\30\u0243\3\0\2\u0243\10\0"+
    "\1\u0243\14\0\27\u0243\1\u0244\1\122\2\0\2\u0243\10\0"+
    "\1\u0244\14\0\27\u0243\1\u0245\1\122\2\0\2\u0243\10\0"+
    "\1\u0245\14\0\30\u0246\3\0\2\u0246\10\0\1\u0246\14\0"+
    "\30\u0247\3\0\2\u0247\10\0\1\u0247\14\0\27\u0247\1\u0248"+
    "\1\122\2\0\2\u0247\10\0\1\u0248\14\0\27\u0247\1\u0249"+
    "\1\122\2\0\2\u0247\10\0\1\u0249\14\0\30\u024a\3\0"+
    "\2\u024a\10\0\1\u024a\14\0\30\u024b\3\0\2\u024b\10\0"+
    "\1\u024b\14\0\27\u024b\1\u024c\1\122\2\0\2\u024b\10\0"+
    "\1\u024c\14\0\27\u024b\1\u024d\1\122\2\0\2\u024b\10\0"+
    "\1\u024d\14\0\30\u024e\3\0\2\u024e\10\0\1\u024e\14\0"+
    "\30\u024f\3\0\2\u024f\10\0\1\u024f\14\0\27\u024f\1\u0250"+
    "\1\122\2\0\2\u024f\10\0\1\u0250\14\0\27\u024f\1\u0251"+
    "\1\122\2\0\2\u024f\10\0\1\u0251\14\0\30\u0252\3\0"+
    "\2\u0252\10\0\1\u0252\14\0\30\u0253\3\0\2\u0253\10\0"+
    "\1\u0253\14\0\27\u0253\1\u0254\1\122\2\0\2\u0253\10\0"+
    "\1\u0254\14\0\27\u0253\1\u0255\1\122\2\0\2\u0253\10\0"+
    "\1\u0255\14\0\30\u0256\3\0\2\u0256\10\0\1\u0256\14\0"+
    "\30\u0257\3\0\2\u0257\10\0\1\u0257\14\0\27\u0257\1\u0258"+
    "\1\122\2\0\2\u0257\10\0\1\u0258\14\0\27\u0257\1\u0259"+
    "\1\122\2\0\2\u0257\10\0\1\u0259\14\0\30\u025a\3\0"+
    "\2\u025a\10\0\1\u025a\14\0\30\u025b\3\0\2\u025b\10\0"+
    "\1\u025b\14\0\27\u025b\1\u025c\1\122\2\0\2\u025b\10\0"+
    "\1\u025c\14\0\27\u025b\1\u025d\1\122\2\0\2\u025b\10\0"+
    "\1\u025d\14\0\30\u025e\3\0\2\u025e\10\0\1\u025e\14\0"+
    "\30\u025f\3\0\2\u025f\10\0\1\u025f\14\0\27\u025f\1\u0260"+
    "\1\122\2\0\2\u025f\10\0\1\u0260\14\0\27\u025f\1\u0261"+
    "\1\122\2\0\2\u025f\10\0\1\u0261\14\0\30\u0262\3\0"+
    "\2\u0262\10\0\1\u0262\14\0\30\u0263\3\0\2\u0263\10\0"+
    "\1\u0263\14\0\27\u0263\1\u0264\1\122\2\0\2\u0263\10\0"+
    "\1\u0264\14\0\27\u0263\1\u0265\1\122\2\0\2\u0263\10\0"+
    "\1\u0265\14\0\30\u0266\3\0\2\u0266\10\0\1\u0266\14\0"+
    "\30\u0267\3\0\2\u0267\10\0\1\u0267\14\0\27\u0267\1\u0268"+
    "\1\122\2\0\2\u0267\10\0\1\u0268\14\0\27\u0267\1\u0269"+
    "\1\122\2\0\2\u0267\10\0\1\u0269\14\0\30\u026a\3\0"+
    "\2\u026a\10\0\1\u026a\14\0\30\u026b\3\0\2\u026b\10\0"+
    "\1\u026b\14\0\27\u026b\1\u026c\1\122\2\0\2\u026b\10\0"+
    "\1\u026c\14\0\27\u026b\1\u026d\1\122\2\0\2\u026b\10\0"+
    "\1\u026d\14\0\30\u026e\3\0\2\u026e\10\0\1\u026e\14\0"+
    "\30\u026f\3\0\2\u026f\10\0\1\u026f\14\0\27\u026f\1\u0270"+
    "\1\122\2\0\2\u026f\10\0\1\u0270\14\0\27\u026f\1\u0271"+
    "\1\122\2\0\2\u026f\10\0\1\u0271\14\0\30\u0272\3\0"+
    "\2\u0272\10\0\1\u0272\14\0\30\u0273\3\0\2\u0273\10\0"+
    "\1\u0273\14\0\27\u0273\1\u0274\1\122\2\0\2\u0273\10\0"+
    "\1\u0274\14\0\27\u0273\1\u0275\1\122\2\0\2\u0273\10\0"+
    "\1\u0275\14\0\30\u0276\3\0\2\u0276\10\0\1\u0276\14\0"+
    "\30\u0277\3\0\2\u0277\10\0\1\u0277\14\0\27\u0277\1\u0278"+
    "\1\122\2\0\2\u0277\10\0\1\u0278\14\0\27\u0277\1\u0279"+
    "\1\122\2\0\2\u0277\10\0\1\u0279\14\0\30\u027a\3\0"+
    "\2\u027a\10\0\1\u027a\14\0\30\u027b\3\0\2\u027b\10\0"+
    "\1\u027b\14\0\27\u027b\1\u027c\1\122\2\0\2\u027b\10\0"+
    "\1\u027c\14\0\27\u027b\1\u027d\1\122\2\0\2\u027b\10\0"+
    "\1\u027d\14\0\30\u027e\3\0\2\u027e\10\0\1\u027e\14\0"+
    "\30\u027f\3\0\2\u027f\10\0\1\u027f\14\0\27\u027f\1\u0280"+
    "\1\122\2\0\2\u027f\10\0\1\u0280\14\0\27\u027f\1\u0281"+
    "\1\122\2\0\2\u027f\10\0\1\u0281\14\0\30\u0282\3\0"+
    "\2\u0282\10\0\1\u0282\14\0\30\u0283\3\0\2\u0283\10\0"+
    "\1\u0283\14\0\27\u0283\1\u0284\1\122\2\0\2\u0283\10\0"+
    "\1\u0284\14\0\27\u0283\1\u0285\1\122\2\0\2\u0283\10\0"+
    "\1\u0285\14\0\30\u0286\3\0\2\u0286\10\0\1\u0286\14\0"+
    "\30\u0287\3\0\2\u0287\10\0\1\u0287\14\0\27\u0287\1\u0288"+
    "\1\122\2\0\2\u0287\10\0\1\u0288\14\0\27\u0287\1\u0289"+
    "\1\122\2\0\2\u0287\10\0\1\u0289\14\0\30\u028a\3\0"+
    "\2\u028a\10\0\1\u028a\14\0\30\u028b\3\0\2\u028b\10\0"+
    "\1\u028b\14\0\27\u028b\1\u028c\1\122\2\0\2\u028b\10\0"+
    "\1\u028c\14\0\27\u028b\1\u028d\1\122\2\0\2\u028b\10\0"+
    "\1\u028d\14\0\30\u028e\3\0\2\u028e\10\0\1\u028e\14\0"+
    "\30\u028f\3\0\2\u028f\10\0\1\u028f\14\0\27\u028f\1\u0290"+
    "\1\122\2\0\2\u028f\10\0\1\u0290\14\0\27\u028f\1\u0291"+
    "\1\122\2\0\2\u028f\10\0\1\u0291\14\0\30\u0292\3\0"+
    "\2\u0292\10\0\1\u0292\14\0\30\u0293\3\0\2\u0293\10\0"+
    "\1\u0293\14\0\27\u0293\1\u0294\1\122\2\0\2\u0293\10\0"+
    "\1\u0294\14\0\27\u0293\1\u0295\1\122\2\0\2\u0293\10\0"+
    "\1\u0295\14\0\30\u0296\3\0\2\u0296\10\0\1\u0296\14\0"+
    "\30\u0297\3\0\2\u0297\10\0\1\u0297\14\0\27\u0297\1\u0298"+
    "\1\122\2\0\2\u0297\10\0\1\u0298\14\0\27\u0297\1\u0299"+
    "\1\122\2\0\2\u0297\10\0\1\u0299\14\0\30\u029a\3\0"+
    "\2\u029a\10\0\1\u029a\14\0\30\u029b\3\0\2\u029b\10\0"+
    "\1\u029b\14\0\27\u029b\1\u029c\1\122\2\0\2\u029b\10\0"+
    "\1\u029c\14\0\27\u029b\1\u029d\1\122\2\0\2\u029b\10\0"+
    "\1\u029d\14\0\30\u029e\3\0\2\u029e\10\0\1\u029e\14\0"+
    "\30\u029f\3\0\2\u029f\10\0\1\u029f\14\0\27\u029f\1\u02a0"+
    "\1\122\2\0\2\u029f\10\0\1\u02a0\14\0\27\u029f\1\u02a1"+
    "\1\122\2\0\2\u029f\10\0\1\u02a1\14\0\30\u02a2\3\0"+
    "\2\u02a2\10\0\1\u02a2\14\0\30\2\3\0\2\2\10\0"+
    "\1\2\14\0\27\2\1\u02a3\1\122\2\0\2\2\10\0"+
    "\1\u02a3\14\0\27\2\1\u02a4\1\122\2\0\2\2\10\0"+
    "\1\u02a4\14\0\30\u02a5\3\0\2\u02a5\10\0\1\u02a5\43\0"+
    "\1\u02a3\1\122\14\0\1\u02a3\43\0\1\u02a6\1\122\14\0"+
    "\1\u02a6\14\0\30\u02a7\3\0\2\u02a7\10\0\1\u02a7\14\0"+
    "\30\u02a8\3\0\2\u02a8\10\0\1\u02a8\14\0\30\u02a9\3\0"+
    "\2\u02a9\10\0\1\u02a9\14\0\30\u02aa\3\0\2\u02aa\10\0"+
    "\1\u02aa\14\0\30\u02ab\3\0\2\u02ab\10\0\1\u02ab\14\0"+
    "\30\u02ac\3\0\2\u02ac\10\0\1\u02ac\14\0\30\u02ad\3\0"+
    "\2\u02ad\10\0\1\u02ad\14\0\30\u02ae\3\0\2\u02ae\10\0"+
    "\1\u02ae\14\0\30\u02af\3\0\2\u02af\10\0\1\u02af\14\0"+
    "\30\u02b0\3\0\2\u02b0\10\0\1\u02b0\14\0\30\u02b1\3\0"+
    "\2\u02b1\10\0\1\u02b1\14\0\30\u02b2\3\0\2\u02b2\10\0"+
    "\1\u02b2\14\0\30\u02b3\3\0\2\u02b3\10\0\1\u02b3\14\0"+
    "\30\u02b4\3\0\2\u02b4\10\0\1\u02b4\14\0\30\u02b5\3\0"+
    "\2\u02b5\10\0\1\u02b5\14\0\30\u02b6\3\0\2\u02b6\10\0"+
    "\1\u02b6\14\0\30\u02b7\3\0\2\u02b7\10\0\1\u02b7\14\0"+
    "\30\u02b8\3\0\2\u02b8\10\0\1\u02b8\14\0\30\u02b9\3\0"+
    "\2\u02b9\10\0\1\u02b9\14\0\30\u02ba\3\0\2\u02ba\10\0"+
    "\1\u02ba\14\0\30\u02bb\3\0\2\u02bb\10\0\1\u02bb\14\0"+
    "\30\u02bc\3\0\2\u02bc\10\0\1\u02bc\14\0\30\u02bd\3\0"+
    "\2\u02bd\10\0\1\u02bd\14\0\30\u02be\3\0\2\u02be\10\0"+
    "\1\u02be\14\0\30\u02bf\3\0\2\u02bf\10\0\1\u02bf\14\0"+
    "\30\u02c0\3\0\2\u02c0\10\0\1\u02c0\14\0\30\u02c1\3\0"+
    "\2\u02c1\10\0\1\u02c1\14\0\30\u02c2\3\0\2\u02c2\10\0"+
    "\1\u02c2\14\0\30\u02c3\3\0\2\u02c3\10\0\1\u02c3\14\0"+
    "\30\u02c4\3\0\2\u02c4\10\0\1\u02c4\14\0\30\u02c5\3\0"+
    "\2\u02c5\10\0\1\u02c5\14\0\30\u02c6\3\0\2\u02c6\10\0"+
    "\1\u02c6\14\0\30\u02c7\3\0\2\u02c7\10\0\1\u02c7\14\0"+
    "\30\u02c8\3\0\2\u02c8\10\0\1\u02c8\14\0\30\u02c9\3\0"+
    "\2\u02c9\10\0\1\u02c9\14\0\30\u02ca\3\0\2\u02ca\10\0"+
    "\1\u02ca\14\0\30\u02cb\3\0\2\u02cb\10\0\1\u02cb\14\0"+
    "\30\u02cc\3\0\2\u02cc\10\0\1\u02cc\14\0\30\u02cd\3\0"+
    "\2\u02cd\10\0\1\u02cd\14\0\30\u02ce\3\0\2\u02ce\10\0"+
    "\1\u02ce\14\0\30\u02cf\3\0\2\u02cf\10\0\1\u02cf\14\0"+
    "\30\u02d0\3\0\2\u02d0\10\0\1\u02d0\14\0\30\u02d1\3\0"+
    "\2\u02d1\10\0\1\u02d1\14\0\30\u02d2\3\0\2\u02d2\10\0"+
    "\1\u02d2\14\0\30\u02d3\3\0\2\u02d3\10\0\1\u02d3\14\0"+
    "\30\u02d4\3\0\2\u02d4\10\0\1\u02d4\14\0\30\u02d5\3\0"+
    "\2\u02d5\10\0\1\u02d5\14\0\30\u02d6\3\0\2\u02d6\10\0"+
    "\1\u02d6\14\0\30\u02d7\3\0\2\u02d7\10\0\1\u02d7\14\0"+
    "\30\u02d8\3\0\2\u02d8\10\0\1\u02d8\14\0\30\u02d9\3\0"+
    "\2\u02d9\10\0\1\u02d9\14\0\30\u02da\3\0\2\u02da\10\0"+
    "\1\u02da\14\0\30\u02db\3\0\2\u02db\10\0\1\u02db\14\0"+
    "\30\u02dc\3\0\2\u02dc\10\0\1\u02dc\14\0\30\u02dd\3\0"+
    "\2\u02dd\10\0\1\u02dd\14\0\30\u02de\3\0\2\u02de\10\0"+
    "\1\u02de\14\0\30\u02df\3\0\2\u02df\10\0\1\u02df\14\0"+
    "\30\u02e0\3\0\2\u02e0\10\0\1\u02e0\14\0\30\u02e1\3\0"+
    "\2\u02e1\10\0\1\u02e1\14\0\30\u02e2\3\0\2\u02e2\10\0"+
    "\1\u02e2\14\0\30\u02e3\3\0\2\u02e3\10\0\1\u02e3\14\0"+
    "\30\u02e4\3\0\2\u02e4\10\0\1\u02e4\14\0\30\u02e5\3\0"+
    "\2\u02e5\10\0\1\u02e5\14\0\30\u02e6\3\0\2\u02e6\10\0"+
    "\1\u02e6\14\0\30\u02e7\3\0\2\u02e7\10\0\1\u02e7\14\0"+
    "\30\u02e8\3\0\2\u02e8\10\0\1\u02e8\14\0\30\u02e9\3\0"+
    "\2\u02e9\10\0\1\u02e9\14\0\30\u02ea\3\0\2\u02ea\10\0"+
    "\1\u02ea\14\0\30\u02eb\3\0\2\u02eb\10\0\1\u02eb\14\0"+
    "\30\u02ec\3\0\2\u02ec\10\0\1\u02ec\14\0\30\u02ed\3\0"+
    "\2\u02ed\10\0\1\u02ed\14\0\30\u02ee\3\0\2\u02ee\10\0"+
    "\1\u02ee\14\0\30\u02ef\3\0\2\u02ef\10\0\1\u02ef\14\0"+
    "\30\u02f0\3\0\2\u02f0\10\0\1\u02f0\14\0\30\u02f1\3\0"+
    "\2\u02f1\10\0\1\u02f1\14\0\30\u02f2\3\0\2\u02f2\10\0"+
    "\1\u02f2\14\0\30\u02f3\3\0\2\u02f3\10\0\1\u02f3\14\0"+
    "\30\u02f4\3\0\2\u02f4\10\0\1\u02f4\14\0\30\u02f5\3\0"+
    "\2\u02f5\10\0\1\u02f5\14\0\30\u02f6\3\0\2\u02f6\10\0"+
    "\1\u02f6\14\0\30\u02f7\3\0\2\u02f7\10\0\1\u02f7\14\0"+
    "\30\u02f8\3\0\2\u02f8\10\0\1\u02f8\14\0\30\u02f9\3\0"+
    "\2\u02f9\10\0\1\u02f9\14\0\30\u02fa\3\0\2\u02fa\10\0"+
    "\1\u02fa\14\0\30\u02fb\3\0\2\u02fb\10\0\1\u02fb\14\0"+
    "\30\u02fc\3\0\2\u02fc\10\0\1\u02fc\14\0\30\u02fd\3\0"+
    "\2\u02fd\10\0\1\u02fd\14\0\30\u02fe\3\0\2\u02fe\10\0"+
    "\1\u02fe\14\0\30\u02ff\3\0\2\u02ff\10\0\1\u02ff\14\0"+
    "\30\u0300\3\0\2\u0300\10\0\1\u0300\14\0\30\u0301\3\0"+
    "\2\u0301\10\0\1\u0301\14\0\30\u0302\3\0\2\u0302\10\0"+
    "\1\u0302\14\0\30\u0303\3\0\2\u0303\10\0\1\u0303\14\0"+
    "\30\u0304\3\0\2\u0304\10\0\1\u0304\14\0\30\u0305\3\0"+
    "\2\u0305\10\0\1\u0305\14\0\30\u0306\3\0\2\u0306\10\0"+
    "\1\u0306\14\0\30\u0307\3\0\2\u0307\10\0\1\u0307\14\0"+
    "\30\u0308\3\0\2\u0308\10\0\1\u0308\14\0\30\u0309\3\0"+
    "\2\u0309\10\0\1\u0309\14\0\30\u030a\3\0\2\u030a\10\0"+
    "\1\u030a\14\0\30\u030b\3\0\2\u030b\10\0\1\u030b\14\0"+
    "\30\u030c\3\0\2\u030c\10\0\1\u030c\14\0\30\u030d\3\0"+
    "\2\u030d\10\0\1\u030d\14\0\30\u030e\3\0\2\u030e\10\0"+
    "\1\u030e\14\0\30\u030f\3\0\2\u030f\10\0\1\u030f\14\0"+
    "\30\u0310\3\0\2\u0310\10\0\1\u0310\14\0\30\u0311\3\0"+
    "\2\u0311\10\0\1\u0311\14\0\30\u0312\3\0\2\u0312\10\0"+
    "\1\u0312\14\0\30\u0313\3\0\2\u0313\10\0\1\u0313\14\0"+
    "\30\u0314\3\0\2\u0314\10\0\1\u0314\14\0\30\u0315\3\0"+
    "\2\u0315\10\0\1\u0315\14\0\30\u0316\3\0\2\u0316\10\0"+
    "\1\u0316\14\0\30\u0317\3\0\2\u0317\10\0\1\u0317\14\0"+
    "\30\u0318\3\0\2\u0318\10\0\1\u0318\14\0\30\u0319\3\0"+
    "\2\u0319\10\0\1\u0319\14\0\30\u031a\3\0\2\u031a\10\0"+
    "\1\u031a\14\0\30\u031b\3\0\2\u031b\10\0\1\u031b\14\0"+
    "\30\u031c\3\0\2\u031c\10\0\1\u031c\14\0\30\u031d\3\0"+
    "\2\u031d\10\0\1\u031d\14\0\30\u031e\3\0\2\u031e\10\0"+
    "\1\u031e\14\0\30\u031f\3\0\2\u031f\10\0\1\u031f\14\0"+
    "\30\u0320\3\0\2\u0320\10\0\1\u0320\14\0\30\u0321\3\0"+
    "\2\u0321\10\0\1\u0321\14\0\30\u0322\3\0\2\u0322\10\0"+
    "\1\u0322\14\0\30\u0323\3\0\2\u0323\10\0\1\u0323\14\0"+
    "\30\u0324\3\0\2\u0324\10\0\1\u0324\14\0\30\u0325\3\0"+
    "\2\u0325\10\0\1\u0325\14\0\30\u0326\3\0\2\u0326\10\0"+
    "\1\u0326\14\0\30\u0327\3\0\2\u0327\10\0\1\u0327\14\0"+
    "\30\u0328\3\0\2\u0328\10\0\1\u0328\14\0\30\u0329\3\0"+
    "\2\u0329\10\0\1\u0329\14\0\30\u032a\3\0\2\u032a\10\0"+
    "\1\u032a\14\0\30\u032b\3\0\2\u032b\10\0\1\u032b\14\0"+
    "\30\u032c\3\0\2\u032c\10\0\1\u032c\14\0\30\u032d\3\0"+
    "\2\u032d\10\0\1\u032d\14\0\30\u032e\3\0\2\u032e\10\0"+
    "\1\u032e\14\0\30\u032f\3\0\2\u032f\10\0\1\u032f\14\0"+
    "\30\u0330\3\0\2\u0330\10\0\1\u0330\14\0\30\u0331\3\0"+
    "\2\u0331\10\0\1\u0331\14\0\30\u0332\3\0\2\u0332\10\0"+
    "\1\u0332\14\0\30\u0333\3\0\2\u0333\10\0\1\u0333\14\0"+
    "\30\u0334\3\0\2\u0334\10\0\1\u0334\14\0\30\u0335\3\0"+
    "\2\u0335\10\0\1\u0335\14\0\30\u0336\3\0\2\u0336\10\0"+
    "\1\u0336\14\0\30\u0337\3\0\2\u0337\10\0\1\u0337\14\0"+
    "\30\u0338\3\0\2\u0338\10\0\1\u0338\14\0\30\u0339\3\0"+
    "\2\u0339\10\0\1\u0339\14\0\30\u033a\3\0\2\u033a\10\0"+
    "\1\u033a\14\0\30\u033b\3\0\2\u033b\10\0\1\u033b\14\0"+
    "\30\u033c\3\0\2\u033c\10\0\1\u033c\14\0\30\u033d\3\0"+
    "\2\u033d\10\0\1\u033d\14\0\30\u033e\3\0\2\u033e\10\0"+
    "\1\u033e\14\0\30\u033f\3\0\2\u033f\10\0\1\u033f\14\0"+
    "\30\u0340\3\0\2\u0340\10\0\1\u0340\14\0\30\u0341\3\0"+
    "\2\u0341\10\0\1\u0341\14\0\30\u0342\3\0\2\u0342\10\0"+
    "\1\u0342\14\0\30\u0343\3\0\2\u0343\10\0\1\u0343\14\0"+
    "\30\u0344\3\0\2\u0344\10\0\1\u0344\14\0\30\u0345\3\0"+
    "\2\u0345\10\0\1\u0345\14\0\30\u0346\3\0\2\u0346\10\0"+
    "\1\u0346\14\0\30\u0347\3\0\2\u0347\10\0\1\u0347\14\0"+
    "\30\u0348\3\0\2\u0348\10\0\1\u0348\14\0\30\u0349\3\0"+
    "\2\u0349\10\0\1\u0349\14\0\30\u034a\3\0\2\u034a\10\0"+
    "\1\u034a\14\0\30\u034b\3\0\2\u034b\10\0\1\u034b\14\0"+
    "\30\u034c\3\0\2\u034c\10\0\1\u034c\14\0\30\u034d\3\0"+
    "\2\u034d\10\0\1\u034d\14\0\30\u034e\3\0\2\u034e\10\0"+
    "\1\u034e\14\0\30\u034f\3\0\2\u034f\10\0\1\u034f\14\0"+
    "\30\u0350\3\0\2\u0350\10\0\1\u0350\14\0\30\u0351\3\0"+
    "\2\u0351\10\0\1\u0351\14\0\30\u0352\3\0\2\u0352\10\0"+
    "\1\u0352\14\0\30\u0353\3\0\2\u0353\10\0\1\u0353\14\0"+
    "\30\u0354\3\0\2\u0354\10\0\1\u0354\14\0\30\u0355\3\0"+
    "\2\u0355\10\0\1\u0355\14\0\30\u0356\3\0\2\u0356\10\0"+
    "\1\u0356\14\0\30\u0357\3\0\2\u0357\10\0\1\u0357\14\0"+
    "\30\u0358\3\0\2\u0358\10\0\1\u0358\14\0\30\u0359\3\0"+
    "\2\u0359\10\0\1\u0359\14\0\30\u035a\3\0\2\u035a\10\0"+
    "\1\u035a\14\0\30\u035b\3\0\2\u035b\10\0\1\u035b\14\0"+
    "\30\u035c\3\0\2\u035c\10\0\1\u035c\14\0\30\u035d\3\0"+
    "\2\u035d\10\0\1\u035d\14\0\30\u035e\3\0\2\u035e\10\0"+
    "\1\u035e\14\0\30\u035f\3\0\2\u035f\10\0\1\u035f\14\0"+
    "\30\u0360\3\0\2\u0360\10\0\1\u0360\14\0\30\u0361\3\0"+
    "\2\u0361\10\0\1\u0361\14\0\30\u0362\3\0\2\u0362\10\0"+
    "\1\u0362\14\0\30\u0363\3\0\2\u0363\10\0\1\u0363\14\0"+
    "\30\u0364\3\0\2\u0364\10\0\1\u0364\14\0\30\u0365\3\0"+
    "\2\u0365\10\0\1\u0365\14\0\30\u0366\3\0\2\u0366\10\0"+
    "\1\u0366\14\0\30\u0367\3\0\2\u0367\10\0\1\u0367\14\0"+
    "\30\u0368\3\0\2\u0368\10\0\1\u0368\14\0\30\u0369\3\0"+
    "\2\u0369\10\0\1\u0369\14\0\30\u036a\3\0\2\u036a\10\0"+
    "\1\u036a\14\0\30\u036b\3\0\2\u036b\10\0\1\u036b\14\0"+
    "\30\u036c\3\0\2\u036c\10\0\1\u036c\14\0\30\u036d\3\0"+
    "\2\u036d\10\0\1\u036d\14\0\30\u036e\3\0\2\u036e\10\0"+
    "\1\u036e\14\0\30\u036f\3\0\2\u036f\10\0\1\u036f\14\0"+
    "\30\u0370\3\0\2\u0370\10\0\1\u0370\14\0\30\u0371\3\0"+
    "\2\u0371\10\0\1\u0371\14\0\30\u0372\3\0\2\u0372\10\0"+
    "\1\u0372\14\0\30\u0373\3\0\2\u0373\10\0\1\u0373\14\0"+
    "\30\u0374\3\0\2\u0374\10\0\1\u0374\14\0\30\u0375\3\0"+
    "\2\u0375\10\0\1\u0375\14\0\30\u0376\3\0\2\u0376\10\0"+
    "\1\u0376\14\0\30\u0377\3\0\2\u0377\10\0\1\u0377\14\0"+
    "\30\u0378\3\0\2\u0378\10\0\1\u0378\14\0\30\u0379\3\0"+
    "\2\u0379\10\0\1\u0379\14\0\30\u037a\3\0\2\u037a\10\0"+
    "\1\u037a\14\0\30\u037b\3\0\2\u037b\10\0\1\u037b\14\0"+
    "\30\u037c\3\0\2\u037c\10\0\1\u037c\14\0\30\u037d\3\0"+
    "\2\u037d\10\0\1\u037d\14\0\30\u037e\3\0\2\u037e\10\0"+
    "\1\u037e\14\0\30\u037f\3\0\2\u037f\10\0\1\u037f\14\0"+
    "\30\u0380\3\0\2\u0380\10\0\1\u0380\14\0\30\u0381\3\0"+
    "\2\u0381\10\0\1\u0381\14\0\30\u0382\3\0\2\u0382\10\0"+
    "\1\u0382\14\0\30\u0383\3\0\2\u0383\10\0\1\u0383\14\0"+
    "\30\u0384\3\0\2\u0384\10\0\1\u0384\14\0\30\u0385\3\0"+
    "\2\u0385\10\0\1\u0385\14\0\30\u0386\3\0\2\u0386\10\0"+
    "\1\u0386\14\0\30\u0387\3\0\2\u0387\10\0\1\u0387\14\0"+
    "\30\u0388\3\0\2\u0388\10\0\1\u0388\14\0\30\u0389\3\0"+
    "\2\u0389\10\0\1\u0389\14\0\30\u038a\3\0\2\u038a\10\0"+
    "\1\u038a\14\0\30\u038b\3\0\2\u038b\10\0\1\u038b\14\0"+
    "\30\u038c\3\0\2\u038c\10\0\1\u038c\14\0\30\u038d\3\0"+
    "\2\u038d\10\0\1\u038d\14\0\30\u038e\3\0\2\u038e\10\0"+
    "\1\u038e\14\0\30\u038f\3\0\2\u038f\10\0\1\u038f\14\0"+
    "\30\u0390\3\0\2\u0390\10\0\1\u0390\14\0\30\u0391\3\0"+
    "\2\u0391\10\0\1\u0391\14\0\30\u0392\3\0\2\u0392\10\0"+
    "\1\u0392\14\0\30\u0393\3\0\2\u0393\10\0\1\u0393\14\0"+
    "\30\u0394\3\0\2\u0394\10\0\1\u0394\14\0\30\u0395\3\0"+
    "\2\u0395\10\0\1\u0395\14\0\30\u0396\3\0\2\u0396\10\0"+
    "\1\u0396\14\0\30\u0397\3\0\2\u0397\10\0\1\u0397\14\0"+
    "\30\u0398\3\0\2\u0398\10\0\1\u0398\14\0\30\u0399\3\0"+
    "\2\u0399\10\0\1\u0399\14\0\30\u039a\3\0\2\u039a\10\0"+
    "\1\u039a\14\0\30\u039b\3\0\2\u039b\10\0\1\u039b\14\0"+
    "\30\u039c\3\0\2\u039c\10\0\1\u039c\14\0\30\u039d\3\0"+
    "\2\u039d\10\0\1\u039d\14\0\30\120\3\0\2\120\10\0"+
    "\1\120\1\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[45400];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unknown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\2\11\2\1\1\11\113\1\4\0\3\1\3\0"+
    "\1\1\1\0\37\1\1\0\1\11\1\0\2\1\1\0"+
    "\1\1\1\0\27\1\1\0\u0209\1\1\0\367\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[925];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;
  
  /** 
   * The number of occupied positions in zzBuffer beyond zzEndRead.
   * When a lead/high surrogate has been read from the input stream
   * into the final zzBuffer position, this will have a value of 1;
   * otherwise, it will have a value of 0.
   */
  private int zzFinalHighSurrogate = 0;

  /* user code: */
    private int count; // Este lleva la cuenta de los TOKENS y es tambiÃ©n el identificador
    private ArrayList<Yytoken> tokens = new ArrayList<>();

    
    
    /**
     * Valida la inserciÃ³n de un nuevo token, si exite agrega la line o aumenta las ocurrencias del TOKEN en la misma linea
     * @param newToken
     * @param line
     * @return 
     */
    private boolean addToken(Yytoken newToken, int line) {
        for (Yytoken token : tokens) {
            if (token.getName().toUpperCase().equals(newToken.getName().toUpperCase()) && token.getType().equals(newToken.getType())) {
                System.out.println("Entro2");
                for (int i = 0; i < token.getLines().size(); i++) {
                    System.out.println("Entro1");
                    if (token.getLines().get(i).getNumLine() == line) {
                        System.out.println("Entro");
                        token.getLines().get(i).setOccurrences(token.getLines().get(i).getOccurrences() + 1);
                        return true;
                    }
                }
                token.getLines().add(new Line(line));
                return true;
            }
        }
        count++;
        newToken.setId(count);
        newToken.getLines().add(new Line(line));
        tokens.add(newToken);
        return true;
    }

    /**
     * @return the lines
     */
    public ArrayList<Yytoken> getTokens() {
        return tokens;
    }
    
    @Override
    public String toString() {
        String value = "";
        for (Yytoken token : tokens) {
            value += token.toString() + "\n";
        }
        return value;
    }

    public String toStringTokens() {
        String value = "";
        for (Yytoken token : tokens) {
            if(!token.getType().equals(Types_Tokens.ERROR)){
                value += token.toString() + "\n";
            }            
        }
        return value;
    }
    
    public String toStringErrores() {
        String value = "";
        for (Yytoken token : tokens) {
            if(token.getType().equals(Types_Tokens.ERROR)){
                value += token.toString() + "\n";
            }            
        }
        return value;
    }


  /**
   * Creates a new scanner
   *
   * @param   in  the java.io.Reader to read input from.
   */
  public LexerAnalyzer(java.io.Reader in) {
      count = 0;
    tokens = new ArrayList<Yytoken>();
    this.zzReader = in;
  }


  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x110000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 176) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length - zzFinalHighSurrogate) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzBuffer.length*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
      zzEndRead += zzFinalHighSurrogate;
      zzFinalHighSurrogate = 0;
    }

    /* fill the buffer with new input */
    int requested = zzBuffer.length - zzEndRead;
    int numRead = zzReader.read(zzBuffer, zzEndRead, requested);

    /* not supposed to occur according to specification of java.io.Reader */
    if (numRead == 0) {
      throw new java.io.IOException("Reader returned 0 characters. See JFlex examples for workaround.");
    }
    if (numRead > 0) {
      zzEndRead += numRead;
      /* If numRead == requested, we might have requested to few chars to
         encode a full Unicode character. We assume that a Reader would
         otherwise never return half characters. */
      if (numRead == requested) {
        if (Character.isHighSurrogate(zzBuffer[zzEndRead - 1])) {
          --zzEndRead;
          zzFinalHighSurrogate = 1;
        }
      }
      /* potentially more input available */
      return false;
    }

    /* numRead < 0 ==> end of stream */
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * Internal scan buffer is resized down to its initial length, if it has grown.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    zzFinalHighSurrogate = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
    if (zzBuffer.length > ZZ_BUFFERSIZE)
      zzBuffer = new char[ZZ_BUFFERSIZE];
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public Yytoken nextToken() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      boolean zzR = false;
      int zzCh;
      int zzCharCount;
      for (zzCurrentPosL = zzStartRead  ;
           zzCurrentPosL < zzMarkedPosL ;
           zzCurrentPosL += zzCharCount ) {
        zzCh = Character.codePointAt(zzBufferL, zzCurrentPosL, zzMarkedPosL);
        zzCharCount = Character.charCount(zzCh);
        switch (zzCh) {
        case '\u000B':
        case '\u000C':
        case '\u0085':
        case '\u2028':
        case '\u2029':
          yyline++;
          zzR = false;
          break;
        case '\r':
          yyline++;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
          }
          break;
        default:
          zzR = false;
        }
      }

      if (zzR) {
        // peek one character ahead if it is \n (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof) 
            zzPeek = false;
          else 
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];

      // set up zzAction for empty match case:
      int zzAttributes = zzAttrL[zzState];
      if ( (zzAttributes & 1) == 1 ) {
        zzAction = zzState;
      }


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL) {
            zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
            zzCurrentPosL += Character.charCount(zzInput);
          }
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = Character.codePointAt(zzBufferL, zzCurrentPosL, zzEndReadL);
              zzCurrentPosL += Character.charCount(zzInput);
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
        zzAtEOF = true;
        return null;
      }
      else {
        switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
          case 1: 
            { Yytoken token = new Yytoken(count, yytext(), Types_Tokens.ERROR);
    addToken(token, yyline);
    return token;
            }
          case 8: break;
          case 2: 
            { /*Ignore*/
            }
          case 9: break;
          case 3: 
            { Yytoken token = new Yytoken(count, yytext(), Types_Tokens.OPERADOR);
    addToken(token, yyline);
    return token;
            }
          case 10: break;
          case 4: 
            { Yytoken token = new Yytoken(count, yytext(), Types_Tokens.IDENTIFICADOR);
    addToken(token, yyline);
    return token;
            }
          case 11: break;
          case 5: 
            { Yytoken token = new Yytoken(count, yytext(), Types_Tokens.LITERAL_NUMERAL);
    addToken(token, yyline);
    return token;
            }
          case 12: break;
          case 6: 
            { Yytoken token = new Yytoken(count, yytext(), Types_Tokens.PALABRA_RESERVADA);
    addToken(token, yyline);
    return token;
            }
          case 13: break;
          case 7: 
            { Yytoken token = new Yytoken(count, yytext(), Types_Tokens.LITERAL_STRING);
    addToken(token, yyline);
    return token;
            }
          case 14: break;
          default:
            zzScanError(ZZ_NO_MATCH);
        }
      }
    }
  }


}
